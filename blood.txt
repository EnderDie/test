if game:GetService("RunService"):IsClient() then error("Please run as a server script. Use h/ instead of hl/.") end
print("FE Compatibility: by WaverlyCole & Mokiros")
InternalData = {}
do
	script.Parent = owner.Character
	local Event = Instance.new("RemoteEvent")
	Event.Name = "UserInput"
	local function NewFakeEvent()
		local Fake = {fakeEvent=true,Connect=function(self,Func)self.Function=Func end}Fake.connect = Fake.Connect
		return Fake
	end
	local Mouse = {Target=nil,Hit=CFrame.new(),KeyUp=NewFakeEvent(),KeyDown=NewFakeEvent(),Button1Up=NewFakeEvent(),Button1Down=NewFakeEvent()}
	local UserInputService = {InputBegan=NewFakeEvent(),InputEnded=NewFakeEvent()}
	local ContextActionService = {Actions={},BindAction = function(self,actionName,Func,touch,...)
		self.Actions[actionName] = Func and {Name=actionName,Function=Func,Keys={...}} or nil
	end};ContextActionService.UnBindAction = ContextActionService.BindAction
	local function TriggerEvent(self,Event,...)
		local Trigger = Mouse[Event]
		if Trigger and Trigger.fakeEvent and Trigger.Function then
			Trigger.Function(...)
		end
	end
	Mouse.TrigEvent = TriggerEvent
	UserInputService.TrigEvent = TriggerEvent
	Event.OnServerEvent:Connect(function(FiredBy,Input)
		if FiredBy.Name ~= owner.Name then end
		if Input.MouseEvent then
			Mouse.Target = Input.Target
			Mouse.Hit = Input.Hit
		else
			local Begin = Input.UserInputState == Enum.UserInputState.Begin
			if Input.UserInputType == Enum.UserInputType.MouseButton1 then
				return Mouse:TrigEvent(Begin and "Button1Down" or "Button1Up")
			end
			for _,Action in pairs(ContextActionService.Actions) do
				for _,Key in pairs(Action.Keys) do
					if Key==Input.KeyCode then
						Action.Function(Action.Name,Input.UserInputState,Input)
					end
				end
			end
			Mouse:TrigEvent(Begin and "KeyDown" or "KeyUp",Input.KeyCode.Name:lower())
			UserInputService:TrigEvent(Begin and "InputBegan" or "InputEnded",Input,false)
		end
	end)
	InternalData["Mouse"] = Mouse
	InternalData["ContextActionService"] = ContextActionService
	InternalData["UserInputService"] = UserInputService
	Event.Parent = NLS([[
		local Player = owner
		local Event = script:WaitForChild("UserInput")
		local UserInputService = game:GetService("UserInputService")
		local Mouse = Player:GetMouse()
		local Input = function(Input,gameProcessedEvent)
			if gameProcessedEvent then return end
			Event:FireServer({KeyCode=Input.KeyCode,UserInputType=Input.UserInputType,UserInputState=Input.UserInputState})
		end
		UserInputService.InputBegan:Connect(Input)
		UserInputService.InputEnded:Connect(Input)
		local Hit,Target
		while wait(1/30) do
			if Hit ~= Mouse.Hit or Target ~= Mouse.Target then
				Hit,Target = Mouse.Hit,Mouse.Target
				Event:FireServer({["MouseEvent"]=true,["Target"]=Target,["Hit"]=Hit})
			end
		end
	]],owner.Character)
end
RealGame = game;game = setmetatable({},{
	__index = function (self,Index)
		local Sandbox = function (Thing)
			if Thing:IsA("Player") then
				local RealPlayer = Thing
				return setmetatable({},{
					__index = function (self,Index)
						local Type = type(RealPlayer[Index])
						if Type == "function" then
							if Index:lower() == "getmouse" or Index:lower() == "mouse" then
								return function (self)
									return InternalData["Mouse"]
								end
							end
							return function (self,...)
								return RealPlayer[Index](RealPlayer,...)
							end
						else
							if Index == "PlrObj" then
								return RealPlayer
							end
							return RealPlayer[Index]
						end
					end;
					__tostring = function(self)
						return RealPlayer.Name
					end
				})
			end
		end
		if RealGame[Index] then
			local Type = type(RealGame[Index])
			if Type == "function" then
				if Index:lower() == "getservice" or Index:lower() == "service" then
					return function (self,Service)
						if Service:lower() == "players" then
							return setmetatable({},{
								__index = function (self2,Index2)
									local RealService = RealGame:GetService(Service)
									local Type2 = type(Index2)
									if Type2 == "function" then
										return function (self,...)
											return RealService[Index2](RealService,...)
										end
									else
										if Index2:lower() == "localplayer" then
											return Sandbox(owner)
										end
										return RealService[Index2]
									end
								end;
								__tostring = function(self)
									return RealGame:GetService(Service).Name
								end
							})
						elseif Service:lower() == "contextactionservice" then
							return InternalData["ContextActionService"]
						elseif Service:lower() == "contextactionservice" then
							return InternalData["UserInputService"]
						elseif Service:lower() == "runservice" then
							return setmetatable({},{
								__index = function(self2,Index2)
									local RealService = RealGame:GetService(Service)
									local Type2 = type(Index2)
									if Type2 == "function" then
										return function (self,...)
											return RealService[Index2](RealService,...)
										end
									else
										if Index2:lower() == "bindtorenderstep" then
											return function (self,Name,Priority,Function)
												return RealGame:GetService("RunService").Stepped:Connect(Function)
											end
										end
										if Index2:lower() == "renderstepped" then
											return RealService["Stepped"]
										end
										return RealService[Index2]
									end
								end
							})
						else
							return RealGame:GetService(Service)
						end
					end
				end
				return function (self,...)
					return RealGame[Index](RealGame,...)
				end
			else
				if game:GetService(Index) then
					return game:GetService(Index)
				end
				return RealGame[Index]
			end
		else
			return nil
		end
	end
});Game = game;owner = game:GetService("Players").LocalPlayer;script = {}
print("Complete! Running...")


--//Paste script below this line.
local partsWithId = {}
local awaitRef = {}

local root = {
	ID = 0;
	Type = "Script";
	Properties = {
		Name = "Blood";
	};
	Children = {
		{
			ID = 1;
			Type = "Folder";
			Properties = {
				Name = "Effects";
			};
			Children = {
				{
					ID = 2;
					Type = "LocalScript";
					Properties = {
						Disabled = true;
						Name = "CamShake";
					};
					Children = {
						{
							ID = 3;
							Type = "IntValue";
							Properties = {
								Name = "intensity";
								Value = 16;
							};
							Children = {};
						};
						{
							ID = 4;
							Type = "IntValue";
							Properties = {
								Name = "times";
								Value = 5;
							};
							Children = {};
						};
					};
				};
			};
		};
		{
			ID = 5;
			Type = "Model";
			Properties = {
				Name = "Pistol";
			};
			Children = {
				{
					ID = 6;
					Type = "Script";
					Properties = {
						Name = "qPerfectionWeld";
					};
					Children = {};
				};
				{
					ID = 7;
					Type = "Model";
					Properties = {
						Name = "RightArm";
					};
					Children = {
						{
							ID = 8;
							Type = "MeshPart";
							Properties = {
								CanCollide = false;
								Color = Color3.new(248/255,248/255,248/255);
								CFrame = CFrame.new(-0.067115999758244,7.0224251747131,-61.537822723389,1,0,0,0,1,0,0,0,1);
								MeshId = "rbxassetid://556921049";
								Transparency = 1;
								Name = "REF";
								Position = Vector3.new(-0.067115999758244,7.0224251747131,-61.537822723389);
								BrickColor = BrickColor.new(248/255,248/255,248/255);
								Material = Enum.Material.SmoothPlastic;
								brickColor = BrickColor.new(248/255,248/255,248/255);
								Size = Vector3.new(1,2,1);
							};
							Children = {};
						};
					};
				};
				{
					ID = 9;
					Type = "Model";
					Properties = {
						Name = "Weapon";
					};
					Children = {
						{
							ID = 10;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(1/15,1/15,1/15);
								UsePartColor = true;
								CFrame = CFrame.new(-0.079235002398491,5.5699768066406,-61.803218841553,-4.3711363417742e-08,-4.3711395392165e-08,1,-0.99999982118607,-1.3113414354393e-07,-4.3711391839452e-08,1.3113414354393e-07,-0.99999994039536,-4.3711381181311e-08);
								Rotation = Vector3.new(-90,90,0);
								BrickColor = BrickColor.new(1/15,1/15,1/15);
								brickColor = BrickColor.new(1/15,1/15,1/15);
								Position = Vector3.new(-0.079235002398491,5.5699768066406,-61.803218841553);
								Orientation = Vector3.new(0,90,-90);
								Material = Enum.Material.Glass;
								Name = "M9Pistol";
								Size = Vector3.new(1.9954197406769,1.239674448967,0.28184846043587);
							};
							Children = {};
						};
						{
							ID = 11;
							Type = "Part";
							Properties = {
								FormFactor = Enum.FormFactor.Custom;
								BottomSurface = Enum.SurfaceType.Smooth;
								CanCollide = false;
								Color = Color3.new(1,1,0);
								CFrame = CFrame.new(-0.077343001961708,4.5913290977478,-62.22688293457,-0.99999964237213,6.0921138356207e-05,-2.9970946343383e-05,-6.0921091062482e-05,-0.99999982118607,-1.9406725186855e-06,-2.9970929972478e-05,-1.9385934137972e-06,0.99999982118607);
								BrickColor = BrickColor.new(1,1,0);
								Size = Vector3.new(0.10184846818447,0.081848472356796,0.10184846818447);
								Rotation = Vector3.new(0,0,-180);
								Transparency = 1;
								brickColor = BrickColor.new(1,1,0);
								Position = Vector3.new(-0.077343001961708,4.5913290977478,-62.22688293457);
								Orientation = Vector3.new(0,0,-180);
								Material = Enum.Material.Metal;
								Name = "Hole";
								TopSurface = Enum.SurfaceType.Smooth;
							};
							Children = {
								{
									ID = 12;
									Type = "ParticleEmitter";
									Properties = {
										Acceleration = Vector3.new(0,5,0);
										RotSpeed = NumberRange.new(-180,180);
										Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.new(1,0,0)),ColorSequenceKeypoint.new(1,Color3.new(1,0,0))});
										VelocitySpread = 360;
										ZOffset = 0.20000000298023;
										Texture = "http://www.roblox.com/asset/?id=304437537";
										Rotation = NumberRange.new(-180,180);
										Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0,0.30000001192093,0),NumberSequenceKeypoint.new(0.30000001192093,0,0),NumberSequenceKeypoint.new(1,1,0)});
										LightEmission = 0.5;
										Lifetime = NumberRange.new(0.30000001192093,0.5);
										Speed = NumberRange.new(0.20000000298023);
										SpreadAngle = Vector2.new(360,360);
										Rate = 150;
										Size = NumberSequence.new({NumberSequenceKeypoint.new(0,0.10000000149012,0),NumberSequenceKeypoint.new(1,0,0)});
									};
									Children = {};
								};
							};
						};
					};
				};
			};
		};
		{
			ID = 13;
			Type = "LocalScript";
			Properties = {
				Name = "Warn";
			};
			Children = {};
		};
		{
			ID = 14;
			Type = "Model";
			Properties = {
				Name = "Sniper";
			};
			Children = {
				{
					ID = 15;
					Type = "Script";
					Properties = {
						Name = "qPerfectionWeld";
					};
					Children = {};
				};
				{
					ID = 16;
					Type = "Model";
					Properties = {
						Name = "RightArm";
					};
					Children = {
						{
							ID = 17;
							Type = "MeshPart";
							Properties = {
								CanCollide = false;
								Color = Color3.new(248/255,248/255,248/255);
								CFrame = CFrame.new(-0.54711502790451,6.7624230384827,-61.027824401855,1,0,0,0,1,0,0,0,1);
								MeshId = "rbxassetid://556921049";
								Transparency = 1;
								Name = "REF";
								Position = Vector3.new(-0.54711502790451,6.7624230384827,-61.027824401855);
								BrickColor = BrickColor.new(248/255,248/255,248/255);
								Material = Enum.Material.SmoothPlastic;
								brickColor = BrickColor.new(248/255,248/255,248/255);
								Size = Vector3.new(1,2,1);
							};
							Children = {};
						};
					};
				};
				{
					ID = 18;
					Type = "Model";
					Properties = {
						Name = "Weapon";
					};
					Children = {
						{
							ID = 19;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(9/85,14/85,53/255);
								UsePartColor = true;
								Rotation = Vector3.new(116.56999969482,89.980003356934,153.42999267578);
								CFrame = CFrame.new(-0.54892897605896,5.2580008506775,-61.83422088623,-8.7422741046339e-08,-4.3711384734024e-08,0.99999994039536,-0.99999988079071,4.3711381181311e-08,-8.7422769468049e-08,-4.3711374075883e-08,-0.99999988079071,-4.3711398944879e-08);
								brickColor = BrickColor.new(9/85,14/85,53/255);
								Position = Vector3.new(-0.54892897605896,5.2580008506775,-61.83422088623);
								Orientation = Vector3.new(0,90,-90);
								Material = Enum.Material.SmoothPlastic;
								BrickColor = BrickColor.new(9/85,14/85,53/255);
								Size = Vector3.new(1.2870011329651,0.050000000745058,0.11440103501081);
							};
							Children = {};
						};
						{
							ID = 20;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(9/85,14/85,53/255);
								UsePartColor = true;
								Rotation = Vector3.new(116.56999969482,89.980003356934,153.42999267578);
								CFrame = CFrame.new(-0.54892897605896,5.3841009140015,-61.59016418457,-8.7422741046339e-08,-4.3711384734024e-08,0.99999994039536,-0.99999988079071,4.3711381181311e-08,-8.7422769468049e-08,-4.3711374075883e-08,-0.99999988079071,-4.3711398944879e-08);
								brickColor = BrickColor.new(9/85,14/85,53/255);
								Position = Vector3.new(-0.54892897605896,5.3841009140015,-61.59016418457);
								Orientation = Vector3.new(0,90,-90);
								Material = Enum.Material.Glass;
								BrickColor = BrickColor.new(9/85,14/85,53/255);
								Size = Vector3.new(1.5496001243591,0.47060009837151,0.24960175156593);
							};
							Children = {};
						};
						{
							ID = 21;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(9/85,14/85,53/255);
								UsePartColor = true;
								Rotation = Vector3.new(116.56999969482,89.980003356934,153.42999267578);
								CFrame = CFrame.new(-0.54892200231552,6.192654132843,-61.09716796875,-8.7422741046339e-08,-4.3711384734024e-08,0.99999994039536,-0.99999988079071,4.3711381181311e-08,-8.7422769468049e-08,-4.3711374075883e-08,-0.99999988079071,-4.3711398944879e-08);
								brickColor = BrickColor.new(9/85,14/85,53/255);
								Position = Vector3.new(-0.54892200231552,6.192654132843,-61.09716796875);
								Orientation = Vector3.new(0,90,-90);
								Material = Enum.Material.Glass;
								BrickColor = BrickColor.new(9/85,14/85,53/255);
								Size = Vector3.new(0.44710698723793,0.82146108150482,0.14092114567757);
							};
							Children = {};
						};
						{
							ID = 22;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(9/85,14/85,53/255);
								UsePartColor = true;
								CFrame = CFrame.new(-0.54892897605896,5.2567000389099,-61.07674407959,-8.7422741046339e-08,-4.3711384734024e-08,0.99999994039536,-0.99999988079071,4.3711381181311e-08,-8.7422769468049e-08,-4.3711374075883e-08,-0.99999988079071,-4.3711398944879e-08);
								Rotation = Vector3.new(116.56999969482,89.980003356934,153.42999267578);
								BrickColor = BrickColor.new(9/85,14/85,53/255);
								brickColor = BrickColor.new(9/85,14/85,53/255);
								Position = Vector3.new(-0.54892897605896,5.2567000389099,-61.07674407959);
								Orientation = Vector3.new(0,90,-90);
								Material = Enum.Material.Glass;
								Name = "Mag";
								Size = Vector3.new(0.6292000412941,0.66422361135483,0.16640064120293);
							};
							Children = {};
						};
						{
							ID = 23;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(9/85,14/85,53/255);
								UsePartColor = true;
								CFrame = CFrame.new(-0.54892897605896,4.2101998329163,-61.183952331543,-8.7422741046339e-08,-4.3711384734024e-08,0.99999994039536,-0.99999988079071,4.3711381181311e-08,-8.7422769468049e-08,-4.3711374075883e-08,-0.99999988079071,-4.3711398944879e-08);
								Rotation = Vector3.new(116.56999969482,89.980003356934,153.42999267578);
								BrickColor = BrickColor.new(9/85,14/85,53/255);
								brickColor = BrickColor.new(9/85,14/85,53/255);
								Position = Vector3.new(-0.54892897605896,4.2101998329163,-61.183952331543);
								Orientation = Vector3.new(0,90,-90);
								Material = Enum.Material.Glass;
								Name = "Grip";
								Size = Vector3.new(1.0322000980377,0.41340026259422,0.096201114356518);
							};
							Children = {};
						};
						{
							ID = 24;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(9/85,14/85,53/255);
								UsePartColor = true;
								Rotation = Vector3.new(116.56999969482,89.980003356934,153.42999267578);
								CFrame = CFrame.new(-0.55152297019958,5.3841009140015,-61.232051849365,-8.7422741046339e-08,-4.3711384734024e-08,0.99999994039536,-0.99999988079071,4.3711381181311e-08,-8.7422769468049e-08,-4.3711374075883e-08,-0.99999988079071,-4.3711398944879e-08);
								brickColor = BrickColor.new(9/85,14/85,53/255);
								Position = Vector3.new(-0.55152297019958,5.3841009140015,-61.232051849365);
								Orientation = Vector3.new(0,90,-90);
								Material = Enum.Material.Glass;
								BrickColor = BrickColor.new(9/85,14/85,53/255);
								Size = Vector3.new(1.5496006011963,0.39000192284584,0.40560054779053);
							};
							Children = {};
						};
						{
							ID = 25;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(9/85,14/85,53/255);
								UsePartColor = true;
								Rotation = Vector3.new(116.56999969482,89.980003356934,153.42999267578);
								CFrame = CFrame.new(-0.54892200231552,6.4605059623718,-61.291854858398,-8.7422741046339e-08,-4.3711384734024e-08,0.99999994039536,-0.99999988079071,4.3711381181311e-08,-8.7422769468049e-08,-4.3711374075883e-08,-0.99999988079071,-4.3711398944879e-08);
								brickColor = BrickColor.new(9/85,14/85,53/255);
								Position = Vector3.new(-0.54892200231552,6.4605059623718,-61.291854858398);
								Orientation = Vector3.new(0,90,-90);
								Material = Enum.Material.Glass;
								BrickColor = BrickColor.new(9/85,14/85,53/255);
								Size = Vector3.new(1.7784018516541,0.97759914398193,0.39519992470741);
							};
							Children = {};
						};
						{
							ID = 26;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(9/85,14/85,53/255);
								UsePartColor = true;
								Rotation = Vector3.new(116.56999969482,89.980003356934,153.42999267578);
								CFrame = CFrame.new(-0.54892897605896,3.7487080097198,-61.583057403564,-8.7422741046339e-08,-4.3711384734024e-08,0.99999994039536,-0.99999988079071,4.3711381181311e-08,-8.7422769468049e-08,-4.3711374075883e-08,-0.99999988079071,-4.3711398944879e-08);
								brickColor = BrickColor.new(9/85,14/85,53/255);
								Position = Vector3.new(-0.54892897605896,3.7487080097198,-61.583057403564);
								Orientation = Vector3.new(0,90,-90);
								Material = Enum.Material.Glass;
								BrickColor = BrickColor.new(9/85,14/85,53/255);
								Size = Vector3.new(1.7212003469467,0.38480001688004,0.30680048465729);
							};
							Children = {};
						};
						{
							ID = 27;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(1/15,1/15,1/15);
								UsePartColor = true;
								Rotation = Vector3.new(116.56999969482,89.980003356934,153.42999267578);
								CFrame = CFrame.new(-0.54892897605896,2.8263599872589,-61.622055053711,-8.7422741046339e-08,-4.3711384734024e-08,0.99999994039536,-0.99999988079071,4.3711381181311e-08,-8.7422769468049e-08,-4.3711374075883e-08,-0.99999988079071,-4.3711398944879e-08);
								brickColor = BrickColor.new(1/15,1/15,1/15);
								Position = Vector3.new(-0.54892897605896,2.8263599872589,-61.622055053711);
								Orientation = Vector3.new(0,90,-90);
								Material = Enum.Material.Glass;
								BrickColor = BrickColor.new(1/15,1/15,1/15);
								Size = Vector3.new(4.0807008743286,0.17939998209476,0.17940063774586);
							};
							Children = {};
						};
						{
							ID = 28;
							Type = "Part";
							Properties = {
								FormFactor = Enum.FormFactor.Custom;
								BottomSurface = Enum.SurfaceType.Smooth;
								CanCollide = false;
								Color = Color3.new(1,1,0);
								CFrame = CFrame.new(-0.5460199713707,5.7299990653992,-61.23363494873,0.99999994039536,-6.1077000282239e-05,8.4627522767278e-08,-8.6488839201593e-08,-3.0472925573122e-05,0.99999988079071,-6.1077000282239e-05,-0.99999988079071,-3.047293103009e-05);
								BrickColor = BrickColor.new(1,1,0);
								Size = Vector3.new(0.20000000298023,0.20000000298023,0.20000000298023);
								Rotation = Vector3.new(-90,0,0);
								Transparency = 1;
								brickColor = BrickColor.new(1,1,0);
								Position = Vector3.new(-0.5460199713707,5.7299990653992,-61.23363494873);
								Orientation = Vector3.new(-89.970001220703,179.83999633789,-179.83999633789);
								Material = Enum.Material.Metal;
								Name = "Trigger";
								TopSurface = Enum.SurfaceType.Smooth;
							};
							Children = {};
						};
						{
							ID = 29;
							Type = "Part";
							Properties = {
								FormFactor = Enum.FormFactor.Custom;
								BottomSurface = Enum.SurfaceType.Smooth;
								CanCollide = false;
								Color = Color3.new(1,1,0);
								CFrame = CFrame.new(-0.55194097757339,0.81493902206421,-61.622825622559,0.99999994039536,-6.0840451624244e-05,-7.330588118748e-07,7.3118690124829e-07,-3.080714304815e-05,0.99999976158142,-6.0840444348287e-05,-0.99999976158142,-3.080711394432e-05);
								BrickColor = BrickColor.new(1,1,0);
								Size = Vector3.new(0.20000000298023,0.20000000298023,0.20000000298023);
								Rotation = Vector3.new(-90,0,0);
								Transparency = 1;
								brickColor = BrickColor.new(1,1,0);
								Position = Vector3.new(-0.55194097757339,0.81493902206421,-61.622825622559);
								Orientation = Vector3.new(-89.959999084473,-178.63999938965,178.63999938965);
								Material = Enum.Material.Metal;
								Name = "Hole";
								TopSurface = Enum.SurfaceType.Smooth;
							};
							Children = {
								{
									ID = 30;
									Type = "ParticleEmitter";
									Properties = {
										Acceleration = Vector3.new(0,5,0);
										RotSpeed = NumberRange.new(-180,180);
										Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.new(1,0,0)),ColorSequenceKeypoint.new(1,Color3.new(1,0,0))});
										VelocitySpread = 360;
										ZOffset = 0.20000000298023;
										Texture = "http://www.roblox.com/asset/?id=304437537";
										Rotation = NumberRange.new(-180,180);
										Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0,0.30000001192093,0),NumberSequenceKeypoint.new(0.30000001192093,0,0),NumberSequenceKeypoint.new(1,1,0)});
										LightEmission = 0.5;
										Lifetime = NumberRange.new(0.30000001192093,0.5);
										Speed = NumberRange.new(0.20000000298023);
										SpreadAngle = Vector2.new(360,360);
										Rate = 150;
										Size = NumberSequence.new({NumberSequenceKeypoint.new(0,0.10000000149012,0),NumberSequenceKeypoint.new(1,0,0)});
									};
									Children = {};
								};
							};
						};
						{
							ID = 31;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(33/85,19/51,98/255);
								UsePartColor = true;
								CFrame = CFrame.new(-0.42045000195503,5.5231938362122,-61.501861572266,-8.7422741046339e-08,9.0399083774173e-08,0.99999928474426,-0.99999988079071,4.371134210146e-08,-8.7422719730057e-08,-4.3711374075883e-08,-0.99999922513962,9.0399069563318e-08);
								Rotation = Vector3.new(44.040000915527,89.930000305176,-134.03999328613);
								BrickColor = BrickColor.new(33/85,19/51,98/255);
								brickColor = BrickColor.new(33/85,19/51,98/255);
								Position = Vector3.new(-0.42045000195503,5.5231938362122,-61.501861572266);
								Orientation = Vector3.new(0,90,-90);
								Material = Enum.Material.SmoothPlastic;
								Name = "Bolt";
								Size = Vector3.new(1.2194008827209,0.52638560533524,0.51175796985626);
							};
							Children = {};
						};
						{
							ID = 32;
							Type = "Part";
							Properties = {
								FormFactor = Enum.FormFactor.Custom;
								BottomSurface = Enum.SurfaceType.Smooth;
								CanCollide = false;
								Color = Color3.new(1,1,0);
								CFrame = CFrame.new(-0.54926300048828,1.6227389574051,-62.022041320801,0.99999994039536,-6.1077000282239e-05,8.4627522767278e-08,-8.6488839201593e-08,-3.0472925573122e-05,0.99999988079071,-6.1077000282239e-05,-0.99999988079071,-3.047293103009e-05);
								BrickColor = BrickColor.new(1,1,0);
								Size = Vector3.new(0.20000000298023,0.20000000298023,0.20000000298023);
								Rotation = Vector3.new(-90,0,0);
								Transparency = 1;
								brickColor = BrickColor.new(1,1,0);
								Position = Vector3.new(-0.54926300048828,1.6227389574051,-62.022041320801);
								Orientation = Vector3.new(-89.970001220703,179.83999633789,-179.83999633789);
								Material = Enum.Material.Metal;
								Name = "SightMark";
								TopSurface = Enum.SurfaceType.Smooth;
							};
							Children = {
								{
									ID = 33;
									Type = "BlockMesh";
									Properties = {
										Offset = Vector3.new(0,0,2.7999999523163);
										Scale = Vector3.new(1.2999999523163,1.2999999523163,1.1000000238419);
									};
									Children = {};
								};
							};
						};
						{
							ID = 34;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(1/15,1/15,1/15);
								CFrame = CFrame.new(-0.5497419834137,4.9373679161072,-61.992057800293,-8.7422762362621e-08,8.7422741046339e-08,0.99999994039536,4.3711384734024e-08,0.99999988079071,-8.7422783678903e-08,-0.99999988079071,4.3711374075883e-08,-8.7422776573476e-08);
								Rotation = Vector3.new(135,89.980003356934,-135);
								BrickColor = BrickColor.new(1/15,1/15,1/15);
								Name = "Scope";
								Position = Vector3.new(-0.5497419834137,4.9373679161072,-61.992057800293);
								Orientation = Vector3.new(0,90,0);
								Material = Enum.Material.Glass;
								brickColor = BrickColor.new(1/15,1/15,1/15);
								Size = Vector3.new(0.52200013399124,2.4255011081696,0.44099995493889);
							};
							Children = {};
						};
					};
				};
			};
		};
		{
			ID = 35;
			Type = "Model";
			Properties = {
				Name = "AK";
			};
			Children = {
				{
					ID = 36;
					Type = "Script";
					Properties = {
						Name = "qPerfectionWeld";
					};
					Children = {};
				};
				{
					ID = 37;
					Type = "Model";
					Properties = {
						Name = "RightArm";
					};
					Children = {
						{
							ID = 38;
							Type = "MeshPart";
							Properties = {
								CanCollide = false;
								Color = Color3.new(248/255,248/255,248/255);
								CFrame = CFrame.new(1.9028830528259,7.8224258422852,-60.057823181152,1,0,0,0,1,0,0,0,1);
								MeshId = "rbxassetid://556921049";
								Transparency = 1;
								Name = "REF";
								Position = Vector3.new(1.9028830528259,7.8224258422852,-60.057823181152);
								BrickColor = BrickColor.new(248/255,248/255,248/255);
								Material = Enum.Material.SmoothPlastic;
								brickColor = BrickColor.new(248/255,248/255,248/255);
								Size = Vector3.new(1,2,1);
							};
							Children = {};
						};
					};
				};
				{
					ID = 39;
					Type = "Model";
					Properties = {
						Name = "Weapon";
					};
					Children = {
						{
							ID = 40;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(248/255,248/255,248/255);
								UsePartColor = true;
								Rotation = Vector3.new(-178.9700012207,90,0);
								Position = Vector3.new(1.9256340265274,6.9368500709534,-60.292335510254);
								Orientation = Vector3.new(0,90,-178.9700012207);
								Material = Enum.Material.SmoothPlastic;
								CFrame = CFrame.new(1.9256340265274,6.9368500709534,-60.292335510254,4.3704361019081e-08,-7.8365758326981e-10,1,-0.017928004264832,-0.99983930587769,0,0.99983924627304,-0.017928000539541,-4.3711388286738e-08);
								Size = Vector3.new(0.78333067893982,0.58435726165771,0.15130533277988);
							};
							Children = {};
						};
						{
							ID = 41;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(9/85,14/85,53/255);
								CFrame = CFrame.new(1.9253480434418,4.1577582359314,-60.742321014404,0,-4.3711381181311e-08,1,-0.99999994039536,0,0,0,-0.99999988079071,-4.3711388286738e-08);
								Rotation = Vector3.new(-90,90,0);
								brickColor = BrickColor.new(9/85,14/85,53/255);
								Position = Vector3.new(1.9253480434418,4.1577582359314,-60.742321014404);
								Orientation = Vector3.new(0,90,-90);
								Material = Enum.Material.Glass;
								BrickColor = BrickColor.new(9/85,14/85,53/255);
								Size = Vector3.new(1.2135430574417,0.43283718824387,0.16451001167297);
							};
							Children = {};
						};
						{
							ID = 42;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(9/85,14/85,53/255);
								CFrame = CFrame.new(1.9182070493698,6.5268969535828,-60.359481811523,0,-4.3711381181311e-08,1,-0.99999994039536,0,0,0,-0.99999988079071,-4.3711388286738e-08);
								Rotation = Vector3.new(-90,90,0);
								brickColor = BrickColor.new(9/85,14/85,53/255);
								Position = Vector3.new(1.9182070493698,6.5268969535828,-60.359481811523);
								Orientation = Vector3.new(0,90,-90);
								Material = Enum.Material.Glass;
								BrickColor = BrickColor.new(9/85,14/85,53/255);
								Size = Vector3.new(0.41102477908134,0.29073706269264,0.12944276630878);
							};
							Children = {};
						};
						{
							ID = 43;
							Type = "WedgePart";
							Properties = {
								BottomSurface = Enum.SurfaceType.Smooth;
								CanCollide = false;
								Color = Color3.new(9/85,14/85,53/255);
								CFrame = CFrame.new(1.9585880041122,5.4154181480408,-60.93962097168,-6.5369675894544e-08,4.9682260083728e-08,-1,0.86340218782425,0.50451630353928,-3.137479964721e-08,0.50451624393463,-0.8634021282196,-7.5875824734339e-08);
								Rotation = Vector3.new(-59.700000762939,-90,0);
								brickColor = BrickColor.new(9/85,14/85,53/255);
								Position = Vector3.new(1.9585880041122,5.4154181480408,-60.93962097168);
								Orientation = Vector3.new(0,-90,59.700000762939);
								Material = Enum.Material.Metal;
								BrickColor = BrickColor.new(9/85,14/85,53/255);
								Size = Vector3.new(0.094529367983341,0.094529405236244,0.094529382884502);
							};
							Children = {
								{
									ID = 44;
									Type = "SpecialMesh";
									Properties = {
										Scale = Vector3.new(0.53999024629593,0.49196791648865,0.022643184289336);
										MeshType = Enum.MeshType.Wedge;
									};
									Children = {};
								};
							};
						};
						{
							ID = 45;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(9/85,14/85,53/255);
								CFrame = CFrame.new(1.9919619560242,6.2391967773438,-60.72819519043,0,-4.3711381181311e-08,1,-0.99999994039536,0,0,0,-0.99999988079071,-4.3711388286738e-08);
								Rotation = Vector3.new(-90,90,0);
								brickColor = BrickColor.new(9/85,14/85,53/255);
								Position = Vector3.new(1.9919619560242,6.2391967773438,-60.72819519043);
								Orientation = Vector3.new(0,90,-90);
								Material = Enum.Material.Glass;
								BrickColor = BrickColor.new(9/85,14/85,53/255);
								Size = Vector3.new(1.7703104019165,0.48876270651817,0.30271834135056);
							};
							Children = {};
						};
						{
							ID = 46;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(248/255,248/255,248/255);
								UsePartColor = true;
								Rotation = Vector3.new(-178.9700012207,90,0);
								Position = Vector3.new(1.9346710443497,5.2004990577698,-60.702087402344);
								Orientation = Vector3.new(0,90,-178.9700012207);
								Material = Enum.Material.SmoothPlastic;
								CFrame = CFrame.new(1.9346710443497,5.2004990577698,-60.702087402344,4.3704361019081e-08,-7.8365758326981e-10,1,-0.017928004264832,-0.99983930587769,0,0.99983924627304,-0.017928000539541,-4.3711388286738e-08);
								Size = Vector3.new(0.46609997749329,0.88868618011475,0.15184633433819);
							};
							Children = {};
						};
						{
							ID = 47;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(248/255,248/255,248/255);
								UsePartColor = true;
								Rotation = Vector3.new(-81.930000305176,0,-90);
								Position = Vector3.new(1.928081035614,7.7557110786438,-60.385753631592);
								Orientation = Vector3.new(-81.930000305176,0,-90);
								Material = Enum.Material.SmoothPlastic;
								CFrame = CFrame.new(1.928081035614,7.7557110786438,-60.385753631592,-4.3239767322234e-10,1,9.355576935377e-08,-0.14030657708645,-9.2690982000931e-08,0.99010801315308,0.99010795354843,-1.2698389895149e-08,0.14030656218529);
								Size = Vector3.new(0.63867771625519,0.13864231109619,1.4755908250809);
							};
							Children = {};
						};
						{
							ID = 48;
							Type = "MeshPart";
							Properties = {
								CanCollide = false;
								Color = Color3.new(9/85,14/85,53/255);
								CFrame = CFrame.new(1.9225039482117,5.7816548347473,-59.970317840576,0,-4.3711381181311e-08,1,-0.99999994039536,0,0,0,-0.99999988079071,-4.3711388286738e-08);
								MeshId = "rbxassetid://883075091";
								Rotation = Vector3.new(-90,90,0);
								BrickColor = BrickColor.new(9/85,14/85,53/255);
								brickColor = BrickColor.new(9/85,14/85,53/255);
								Position = Vector3.new(1.9225039482117,5.7816548347473,-59.970317840576);
								Orientation = Vector3.new(0,90,-90);
								Material = Enum.Material.Glass;
								Name = "Meshes/AK-47 mag";
								Size = Vector3.new(1.0833050012589,1.1146513223648,0.16126202046871);
							};
							Children = {};
						};
						{
							ID = 49;
							Type = "Part";
							Properties = {
								BottomSurface = Enum.SurfaceType.Smooth;
								CanCollide = false;
								Color = Color3.new(9/85,14/85,53/255);
								CFrame = CFrame.new(1.9261209964752,8.461817741394,-60.31827545166,0,-4.3711381181311e-08,1,-0.99999994039536,0,0,0,-0.99999988079071,-4.3711388286738e-08);
								Rotation = Vector3.new(-90,90,0);
								BrickColor = BrickColor.new(9/85,14/85,53/255);
								brickColor = BrickColor.new(9/85,14/85,53/255);
								Position = Vector3.new(1.9261209964752,8.461817741394,-60.31827545166);
								Orientation = Vector3.new(0,90,-90);
								Material = Enum.Material.Glass;
								Size = Vector3.new(0.094529367983341,0.58324879407883,0.13474586606026);
								TopSurface = Enum.SurfaceType.Smooth;
							};
							Children = {
								{
									ID = 50;
									Type = "BlockMesh";
									Properties = {
										Scale = Vector3.new(0.26218894124031,1,1);
									};
									Children = {};
								};
							};
						};
						{
							ID = 51;
							Type = "WedgePart";
							Properties = {
								BottomSurface = Enum.SurfaceType.Smooth;
								CanCollide = false;
								Color = Color3.new(9/85,14/85,53/255);
								CFrame = CFrame.new(1.9585880041122,5.4244117736816,-60.943069458008,-2.6492742222217e-08,1,1.2759990397626e-07,-0.91914612054825,-7.4614447953536e-08,0.39391669631004,0.39391675591469,-1.0684701834407e-07,0.91914588212967);
								Rotation = Vector3.new(-23.200000762939,0,-90);
								brickColor = BrickColor.new(9/85,14/85,53/255);
								Position = Vector3.new(1.9585880041122,5.4244117736816,-60.943069458008);
								Orientation = Vector3.new(-23.200000762939,0,-90);
								Material = Enum.Material.Glass;
								BrickColor = BrickColor.new(9/85,14/85,53/255);
								Size = Vector3.new(0.094529367983341,0.094529405236244,0.094529382884502);
							};
							Children = {
								{
									ID = 52;
									Type = "SpecialMesh";
									Properties = {
										Scale = Vector3.new(0.50633400678635,0.022643180564046,0.46213141083717);
										MeshType = Enum.MeshType.Wedge;
									};
									Children = {};
								};
							};
						};
						{
							ID = 53;
							Type = "WedgePart";
							Properties = {
								BottomSurface = Enum.SurfaceType.Smooth;
								CanCollide = false;
								Color = Color3.new(32/51,19/51,53/255);
								CFrame = CFrame.new(1.9974039793015,6.8808808326721,-60.417373657227,-4.9123865863976e-08,1,1.3079777261282e-07,-0.99230426549911,-3.2550044437585e-08,-0.12382300198078,-0.12382297962904,-1.3587384728453e-07,0.99230420589447);
								Rotation = Vector3.new(7.1100001335144,0,-90);
								brickColor = BrickColor.new(32/51,19/51,53/255);
								Position = Vector3.new(1.9974039793015,6.8808808326721,-60.417373657227);
								Orientation = Vector3.new(7.1100001335144,0,-90);
								Material = Enum.Material.Wood;
								BrickColor = BrickColor.new(32/51,19/51,53/255);
								Size = Vector3.new(0.29886800050735,0.094529405236244,0.16220819950104);
							};
							Children = {
								{
									ID = 54;
									Type = "SpecialMesh";
									Properties = {
										Scale = Vector3.new(1,0.082435086369514,1);
										MeshType = Enum.MeshType.Wedge;
									};
									Children = {};
								};
							};
						};
						{
							ID = 55;
							Type = "Part";
							Properties = {
								BottomSurface = Enum.SurfaceType.Smooth;
								CanCollide = false;
								Color = Color3.new(9/85,14/85,53/255);
								CFrame = CFrame.new(1.9264719486237,5.3854851722717,-60.906879425049,0,-4.3711381181311e-08,1,-0.99999994039536,0,0,0,-0.99999988079071,-4.3711388286738e-08);
								Rotation = Vector3.new(-90,90,0);
								BrickColor = BrickColor.new(9/85,14/85,53/255);
								brickColor = BrickColor.new(9/85,14/85,53/255);
								Position = Vector3.new(1.9264719486237,5.3854851722717,-60.906879425049);
								Orientation = Vector3.new(0,90,-90);
								Material = Enum.Material.Glass;
								Size = Vector3.new(0.094529367983341,0.094529405236244,0.094529382884502);
								TopSurface = Enum.SurfaceType.Smooth;
							};
							Children = {
								{
									ID = 56;
									Type = "BlockMesh";
									Properties = {
										Scale = Vector3.new(0.081291645765305,0.5404070019722,0.70184302330017);
									};
									Children = {};
								};
							};
						};
						{
							ID = 57;
							Type = "Part";
							Properties = {
								BottomSurface = Enum.SurfaceType.Smooth;
								CanCollide = false;
								Color = Color3.new(32/51,19/51,53/255);
								CFrame = CFrame.new(1.9346710443497,5.4016628265381,-60.628520965576,4.3704361019081e-08,-7.8365758326981e-10,1,-0.017928004264832,-0.99983930587769,0,0.99983924627304,-0.017928000539541,-4.3711388286738e-08);
								Rotation = Vector3.new(-178.9700012207,90,0);
								BrickColor = BrickColor.new(32/51,19/51,53/255);
								brickColor = BrickColor.new(32/51,19/51,53/255);
								Position = Vector3.new(1.9346710443497,5.4016628265381,-60.628520965576);
								Orientation = Vector3.new(0,90,-178.9700012207);
								Material = Enum.Material.Sand;
								Size = Vector3.new(0.20845013856888,0.094529405236244,0.15184612572193);
								TopSurface = Enum.SurfaceType.Smooth;
							};
							Children = {
								{
									ID = 58;
									Type = "BlockMesh";
									Properties = {
										Scale = Vector3.new(1,0.065260969102383,1);
									};
									Children = {};
								};
							};
						};
						{
							ID = 59;
							Type = "Part";
							Properties = {
								BottomSurface = Enum.SurfaceType.Smooth;
								CanCollide = false;
								CFrame = CFrame.new(1.9347590208054,3.5919959545135,-60.637992858887,1,4.3711384734024e-08,-4.3711377628597e-08,4.371137052317e-08,-0.9999994635582,-4.2351647362715e-22,-4.3711377628597e-08,-1.9106846181318e-15,-0.9999994635582);
								Rotation = Vector3.new(180,0,0);
								Name = "Hole";
								Position = Vector3.new(1.9347590208054,3.5919959545135,-60.637992858887);
								Orientation = Vector3.new(0,-180,180);
								Size = Vector3.new(0.050000000745058,0.050000011920929,0.050000000745058);
								TopSurface = Enum.SurfaceType.Smooth;
							};
							Children = {
								{
									ID = 60;
									Type = "ParticleEmitter";
									Properties = {
										Acceleration = Vector3.new(0,5,0);
										RotSpeed = NumberRange.new(-180,180);
										Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.new(1,0,0)),ColorSequenceKeypoint.new(1,Color3.new(1,0,0))});
										VelocitySpread = 360;
										ZOffset = 0.20000000298023;
										Texture = "http://www.roblox.com/asset/?id=304437537";
										Rotation = NumberRange.new(-180,180);
										Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0,0.30000001192093,0),NumberSequenceKeypoint.new(0.30000001192093,0,0),NumberSequenceKeypoint.new(1,1,0)});
										LightEmission = 0.5;
										Lifetime = NumberRange.new(0.30000001192093,0.5);
										Speed = NumberRange.new(0.20000000298023);
										SpreadAngle = Vector2.new(360,360);
										Rate = 150;
										Size = NumberSequence.new({NumberSequenceKeypoint.new(0,0.10000000149012,0),NumberSequenceKeypoint.new(1,0,0)});
									};
									Children = {};
								};
							};
						};
					};
				};
			};
		};
		{
			ID = 61;
			Type = "Model";
			Properties = {
				Name = "Katana";
			};
			Children = {
				{
					ID = 62;
					Type = "Script";
					Properties = {
						Name = "qPerfectionWeld";
					};
					Children = {};
				};
				{
					ID = 63;
					Type = "Model";
					Properties = {
						Name = "RightArm";
					};
					Children = {
						{
							ID = 64;
							Type = "MeshPart";
							Properties = {
								CanCollide = false;
								Color = Color3.new(248/255,248/255,248/255);
								CFrame = CFrame.new(-0.017115000635386,1.4524309635162,-61.067825317383,1,0,0,0,1,0,0,0,1);
								MeshId = "rbxassetid://556921049";
								Transparency = 1;
								Name = "REF";
								Position = Vector3.new(-0.017115000635386,1.4524309635162,-61.067825317383);
								BrickColor = BrickColor.new(248/255,248/255,248/255);
								Material = Enum.Material.SmoothPlastic;
								brickColor = BrickColor.new(248/255,248/255,248/255);
								Size = Vector3.new(1,2,1);
							};
							Children = {};
						};
					};
				};
				{
					ID = 65;
					Type = "Model";
					Properties = {
						Name = "Weapon";
					};
					Children = {
						{
							ID = 66;
							Type = "UnionOperation";
							Properties = {
								Reflectance = 0.10000000149012;
								CanCollide = false;
								Color = Color3.new(1/15,1/15,1/15);
								UsePartColor = true;
								Rotation = Vector3.new(180,0,180);
								CFrame = CFrame.new(-0.025268999859691,0.46003299951553,-64,-1,-4.3670461309375e-06,-7.436602800226e-08,-4.3670456761902e-06,1,-1.8037236770851e-07,7.4366809599269e-08,-1.8037204085886e-07,-1);
								brickColor = BrickColor.new(1/15,1/15,1/15);
								Position = Vector3.new(-0.025268999859691,0.46003299951553,-64);
								Orientation = Vector3.new(0,-180,0);
								Material = Enum.Material.SmoothPlastic;
								BrickColor = BrickColor.new(1/15,1/15,1/15);
								Size = Vector3.new(0.050000000745058,0.32517489790916,4.0139751434326);
							};
							Children = {};
						};
						{
							ID = 67;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(1,89/255,89/255);
								CFrame = CFrame.new(-0.015242000110447,0.35741901397705,-61.799667358398,-0.64278709888458,1.8908764332082e-07,-0.76604497432709,-0.76604497432709,8.3307583054193e-08,0.64278709888458,1.8536043455697e-07,1,9.1300584870169e-08);
								Rotation = Vector3.new(-90,-50,-180);
								brickColor = BrickColor.new(1,89/255,89/255);
								Position = Vector3.new(-0.015242000110447,0.35741901397705,-61.799667358398);
								Orientation = Vector3.new(-40,-90,-90);
								Material = Enum.Material.SmoothPlastic;
								BrickColor = BrickColor.new(1,89/255,89/255);
								Size = Vector3.new(0.60740661621094,0.090001106262207,0.55954360961914);
							};
							Children = {};
						};
						{
							ID = 68;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(1,89/255,89/255);
								UsePartColor = true;
								Rotation = Vector3.new(180,0,180);
								CFrame = CFrame.new(-0.017699999734759,0.35911199450493,-61.806999206543,-1,-4.3670461309375e-06,-7.436602800226e-08,-4.3670456761902e-06,1,-1.8037236770851e-07,7.4366809599269e-08,-1.8037204085886e-07,-1);
								brickColor = BrickColor.new(1,89/255,89/255);
								Position = Vector3.new(-0.017699999734759,0.35911199450493,-61.806999206543);
								Orientation = Vector3.new(0,-180,0);
								Material = Enum.Material.SmoothPlastic;
								BrickColor = BrickColor.new(1,89/255,89/255);
								Size = Vector3.new(0.20869512856007,0.28478166460991,0.050000000745058);
							};
							Children = {};
						};
						{
							ID = 69;
							Type = "UnionOperation";
							Properties = {
								Reflectance = 0.050000000745058;
								CanCollide = false;
								Color = Color3.new(9/85,14/85,53/255);
								UsePartColor = true;
								Rotation = Vector3.new(176.88000488281,0,180);
								CFrame = CFrame.new(-0.025268999859691,0.4111750125885,-61.083492279053,-1,-4.3646227823047e-06,1.6336045405296e-07,-4.3670456761902e-06,0.9985186457634,-0.05441140756011,7.4366809599269e-08,-0.05441140756011,-0.9985186457634);
								brickColor = BrickColor.new(9/85,14/85,53/255);
								Position = Vector3.new(-0.025268999859691,0.4111750125885,-61.083492279053);
								Orientation = Vector3.new(3.1199998855591,180,0);
								Material = Enum.Material.SmoothPlastic;
								BrickColor = BrickColor.new(9/85,14/85,53/255);
								Size = Vector3.new(0.13944570720196,0.23813442885876,1.2651581764221);
							};
							Children = {};
						};
						{
							ID = 70;
							Type = "UnionOperation";
							Properties = {
								Reflectance = 0.10000000149012;
								CanCollide = false;
								Color = Color3.new(1/15,1/15,1/15);
								UsePartColor = true;
								Rotation = Vector3.new(180,0,180);
								CFrame = CFrame.new(0,0.46003299951553,-64,-1,-4.3670461309375e-06,-7.436602800226e-08,-4.3670456761902e-06,1,-1.8037236770851e-07,7.4366809599269e-08,-1.8037204085886e-07,-1);
								brickColor = BrickColor.new(1/15,1/15,1/15);
								Position = Vector3.new(0,0.46003299951553,-64);
								Orientation = Vector3.new(0,-180,0);
								Material = Enum.Material.SmoothPlastic;
								BrickColor = BrickColor.new(1/15,1/15,1/15);
								Size = Vector3.new(0.26899999380112,0.44897490739822,4.0139751434326);
							};
							Children = {};
						};
						{
							ID = 71;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(79/85,78/85,78/85);
								UsePartColor = true;
								Rotation = Vector3.new(176.88000488281,0,180);
								CFrame = CFrame.new(-0.0252669993788,0.42585399746895,-60.831554412842,-1,-4.3646227823047e-06,1.6336045405296e-07,-4.3670456761902e-06,0.9985186457634,-0.05441140756011,7.4366809599269e-08,-0.05441140756011,-0.9985186457634);
								brickColor = BrickColor.new(79/85,78/85,78/85);
								Position = Vector3.new(-0.0252669993788,0.42585399746895,-60.831554412842);
								Orientation = Vector3.new(3.1199998855591,180,0);
								Material = Enum.Material.SmoothPlastic;
								BrickColor = BrickColor.new(79/85,78/85,78/85);
								Size = Vector3.new(0.16975556313992,0.23845398426056,0.65262824296951);
							};
							Children = {};
						};
						{
							ID = 72;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(1/15,1/15,1/15);
								UsePartColor = true;
								Rotation = Vector3.new(180,0,180);
								CFrame = CFrame.new(-0.012268000282347,0.38219100236893,-61.903774261475,-1,-4.3670461309375e-06,-7.436602800226e-08,-4.3670456761902e-06,1,-1.8037236770851e-07,7.4366809599269e-08,-1.8037204085886e-07,-1);
								brickColor = BrickColor.new(1/15,1/15,1/15);
								Position = Vector3.new(-0.012268000282347,0.38219100236893,-61.903774261475);
								Orientation = Vector3.new(0,-180,0);
								Material = Enum.Material.SmoothPlastic;
								BrickColor = BrickColor.new(1/15,1/15,1/15);
								Size = Vector3.new(0.097757555544376,0.22624336183071,0.19789724051952);
							};
							Children = {};
						};
						{
							ID = 73;
							Type = "UnionOperation";
							Properties = {
								Reflectance = 0.10000000149012;
								CanCollide = false;
								Color = Color3.new(12/17,14/17,76/85);
								UsePartColor = true;
								CFrame = CFrame.new(-0.012268000282347,0.4166060090065,-64,-1,-4.3670461309375e-06,-7.436602800226e-08,-4.3670456761902e-06,1,-1.8037236770851e-07,7.4366809599269e-08,-1.8037204085886e-07,-1);
								Rotation = Vector3.new(180,0,180);
								BrickColor = BrickColor.new(12/17,14/17,76/85);
								brickColor = BrickColor.new(12/17,14/17,76/85);
								Position = Vector3.new(-0.012268000282347,0.4166060090065,-64);
								Orientation = Vector3.new(0,-180,0);
								Material = Enum.Material.SmoothPlastic;
								Name = "Hitbox";
								Size = Vector3.new(0.050000000745058,0.32517489790916,4.0139751434326);
							};
							Children = {
								{
									ID = 74;
									Type = "Trail";
									Properties = {
										LightInfluence = 1;
										Lifetime = 1;
										Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.new(0,0,0)),ColorSequenceKeypoint.new(1,Color3.new(54/85,0,0))});
										Attachment0 = "_R:75_";
										TextureMode = Enum.TextureMode.Wrap;
										Attachment1 = "_R:76_";
									};
									Children = {};
								};
								{
									ID = 75;
									Type = "Attachment";
									Properties = {
										Rotation = Vector3.new(5.2296276408015e-05,-0.90509414672852,-0.00071419618325308);
										SecondaryAxis = Vector3.new(1.246352076123e-05,1,1.1096433354396e-06);
										Position = Vector3.new(0.0025696158409119,2.9563903808594e-05,-2.0299644470215);
										Orientation = Vector3.new(5.2289757149993e-05,-0.90509402751923,-0.00071502232458442);
										CFrame = CFrame.new(0.0025696158409119,2.9563903808594e-05,-2.0299644470215,0.99987530708313,1.246352076123e-05,-0.015796216204762,-1.2479494216677e-05,1,-9.1262847945472e-07,0.015796216204762,1.1096433354396e-06,0.99987530708313);
										Name = "Attachment0";
										Axis = Vector3.new(0.99987530708313,-1.2479494216677e-05,0.015796216204762);
									};
									Children = {};
								};
								{
									ID = 76;
									Type = "Attachment";
									Properties = {
										Rotation = Vector3.new(6.4751773606986e-05,-0.90509283542633,-0.0014720985200256);
										SecondaryAxis = Vector3.new(2.568976378825e-05,1,1.5359828466899e-06);
										Position = Vector3.new(0.0096868574619293,0.099967002868652,1.9502296447754);
										Orientation = Vector3.new(6.4743697294034e-05,-0.90509277582169,-0.0014731215778738);
										CFrame = CFrame.new(0.0096868574619293,0.099967002868652,1.9502296447754,0.99987530708313,2.568976378825e-05,-0.015796193853021,-2.5710824047565e-05,1,-1.1299907782814e-06,0.015796193853021,1.5359828466899e-06,0.99987530708313);
										Name = "Attachment1";
										Axis = Vector3.new(0.99987530708313,-2.5710824047565e-05,0.015796193853021);
									};
									Children = {};
								};
							};
						};
						{
							ID = 77;
							Type = "UnionOperation";
							Properties = {
								Reflectance = 0.10000000149012;
								CanCollide = false;
								Color = Color3.new(79/85,78/85,78/85);
								UsePartColor = true;
								Rotation = Vector3.new(176.88000488281,0,180);
								CFrame = CFrame.new(-0.025268999859691,0.39264398813248,-61.427230834961,-1,-4.3646227823047e-06,1.6336045405296e-07,-4.3670456761902e-06,0.9985186457634,-0.05441140756011,7.4366809599269e-08,-0.05441140756011,-0.9985186457634);
								brickColor = BrickColor.new(79/85,78/85,78/85);
								Position = Vector3.new(-0.025268999859691,0.39264398813248,-61.427230834961);
								Orientation = Vector3.new(3.1199998855591,180,0);
								Material = Enum.Material.SmoothPlastic;
								BrickColor = BrickColor.new(79/85,78/85,78/85);
								Size = Vector3.new(0.16975553333759,0.23823167383671,0.5601669549942);
							};
							Children = {};
						};
						{
							ID = 78;
							Type = "UnionOperation";
							Properties = {
								CanCollide = false;
								Color = Color3.new(1,89/255,89/255);
								UsePartColor = true;
								Rotation = Vector3.new(180,0,180);
								CFrame = CFrame.new(-0.0252669993788,0.40437000989914,-61.038566589355,-1,-4.3670461309375e-06,-7.436602800226e-08,-4.3670456761902e-06,1,-1.8037236770851e-07,7.4366809599269e-08,-1.8037204085886e-07,-1);
								brickColor = BrickColor.new(1,89/255,89/255);
								Position = Vector3.new(-0.0252669993788,0.40437000989914,-61.038566589355);
								Orientation = Vector3.new(0,-180,0);
								Material = Enum.Material.SmoothPlastic;
								BrickColor = BrickColor.new(1,89/255,89/255);
								Size = Vector3.new(0.17066471278667,0.3455992937088,1.5464636087418);
							};
							Children = {};
						};
					};
				};
			};
		};
	};
};

local function Scan(item, parent)
	local obj = Instance.new(item.Type)
	if (item.ID) then
		local awaiting = awaitRef[item.ID]
		if (awaiting) then
			awaiting[1][awaiting[2]] = obj
			awaitRef[item.ID] = nil
		else
			partsWithId[item.ID] = obj
		end
	end
	for p,v in pairs(item.Properties) do
		if (type(v) == "string") then
			local id = tonumber(v:match("^_R:(%w+)_$"))
			if (id) then
				if (partsWithId[id]) then
					v = partsWithId[id]
				else
					awaitRef[id] = {obj, p}
					v = nil
				end
			end
		end
		obj[p] = v
	end
	for _,c in pairs(item.Children) do
		Scan(c, obj)
	end
	obj.Parent = parent
	return obj
end

return function() return Scan(root, nil) end
