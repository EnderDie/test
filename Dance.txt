if game:GetService("RunService"):IsClient() then error("Please run as a server script. Use h/ instead of hl/.") end
print("FE Compatibility: by WaverlyCole & Mokiros")
InternalData = {}
do
	script.Parent = owner.Character
	local Event = Instance.new("RemoteEvent")
	Event.Name = "UserInput"
	local function NewFakeEvent()
		local Fake = {fakeEvent=true,Connect=function(self,Func)self.Function=Func end}Fake.connect = Fake.Connect
		return Fake
	end
	local Mouse = {Target=nil,Hit=CFrame.new(),KeyUp=NewFakeEvent(),KeyDown=NewFakeEvent(),Button1Up=NewFakeEvent(),Button1Down=NewFakeEvent()}
	local UserInputService = {InputBegan=NewFakeEvent(),InputEnded=NewFakeEvent()}
	local ContextActionService = {Actions={},BindAction = function(self,actionName,Func,touch,...)
		self.Actions[actionName] = Func and {Name=actionName,Function=Func,Keys={...}} or nil
	end};ContextActionService.UnBindAction = ContextActionService.BindAction
	local function TriggerEvent(self,Event,...)
		local Trigger = Mouse[Event]
		if Trigger and Trigger.fakeEvent and Trigger.Function then
			Trigger.Function(...)
		end
	end
	Mouse.TrigEvent = TriggerEvent
	UserInputService.TrigEvent = TriggerEvent
	Event.OnServerEvent:Connect(function(FiredBy,Input)
		if FiredBy.Name ~= owner.Name then end
		if Input.MouseEvent then
			Mouse.Target = Input.Target
			Mouse.Hit = Input.Hit
		else
			local Begin = Input.UserInputState == Enum.UserInputState.Begin
			if Input.UserInputType == Enum.UserInputType.MouseButton1 then
				return Mouse:TrigEvent(Begin and "Button1Down" or "Button1Up")
			end
			for _,Action in pairs(ContextActionService.Actions) do
				for _,Key in pairs(Action.Keys) do
					if Key==Input.KeyCode then
						Action.Function(Action.Name,Input.UserInputState,Input)
					end
				end
			end
			Mouse:TrigEvent(Begin and "KeyDown" or "KeyUp",Input.KeyCode.Name:lower())
			UserInputService:TrigEvent(Begin and "InputBegan" or "InputEnded",Input,false)
		end
	end)
	InternalData["Mouse"] = Mouse
	InternalData["ContextActionService"] = ContextActionService
	InternalData["UserInputService"] = UserInputService
	Event.Parent = NLS([[
		local Player = owner
		local Event = script:WaitForChild("UserInput")
		local UserInputService = game:GetService("UserInputService")
		local Mouse = Player:GetMouse()
		local Input = function(Input,gameProcessedEvent)
			if gameProcessedEvent then return end
			Event:FireServer({KeyCode=Input.KeyCode,UserInputType=Input.UserInputType,UserInputState=Input.UserInputState})
		end
		UserInputService.InputBegan:Connect(Input)
		UserInputService.InputEnded:Connect(Input)
		local Hit,Target
		while wait(1/30) do
			if Hit ~= Mouse.Hit or Target ~= Mouse.Target then
				Hit,Target = Mouse.Hit,Mouse.Target
				Event:FireServer({["MouseEvent"]=true,["Target"]=Target,["Hit"]=Hit})
			end
		end
	]],owner.Character)
end
RealGame = game;game = setmetatable({},{
	__index = function (self,Index)
		local Sandbox = function (Thing)
			if Thing:IsA("Player") then
				local RealPlayer = Thing
				return setmetatable({},{
					__index = function (self,Index)
						local Type = type(RealPlayer[Index])
						if Type == "function" then
							if Index:lower() == "getmouse" or Index:lower() == "mouse" then
								return function (self)
									return InternalData["Mouse"]
								end
							end
							return function (self,...)
								return RealPlayer[Index](RealPlayer,...)
							end
						else
							if Index == "PlrObj" then
								return RealPlayer
							end
							return RealPlayer[Index]
						end
					end;
					__tostring = function(self)
						return RealPlayer.Name
					end
				})
			end
		end
		if RealGame[Index] then
			local Type = type(RealGame[Index])
			if Type == "function" then
				if Index:lower() == "getservice" or Index:lower() == "service" then
					return function (self,Service)
						if Service:lower() == "players" then
							return setmetatable({},{
								__index = function (self2,Index2)
									local RealService = RealGame:GetService(Service)
									local Type2 = type(Index2)
									if Type2 == "function" then
										return function (self,...)
											return RealService[Index2](RealService,...)
										end
									else
										if Index2:lower() == "localplayer" then
											return Sandbox(owner)
										end
										return RealService[Index2]
									end
								end;
								__tostring = function(self)
									return RealGame:GetService(Service).Name
								end
							})
						elseif Service:lower() == "contextactionservice" then
							return InternalData["ContextActionService"]
						elseif Service:lower() == "contextactionservice" then
							return InternalData["UserInputService"]
						elseif Service:lower() == "runservice" then
							return setmetatable({},{
								__index = function(self2,Index2)
									local RealService = RealGame:GetService(Service)
									local Type2 = type(Index2)
									if Type2 == "function" then
										return function (self,...)
											return RealService[Index2](RealService,...)
										end
									else
										if Index2:lower() == "bindtorenderstep" then
											return function (self,Name,Priority,Function)
												return RealGame:GetService("RunService").Stepped:Connect(Function)
											end
										end
										if Index2:lower() == "renderstepped" then
											return RealService["Stepped"]
										end
										return RealService[Index2]
									end
								end
							})
						else
							return RealGame:GetService(Service)
						end
					end
				end
				return function (self,...)
					return RealGame[Index](RealGame,...)
				end
			else
				if game:GetService(Index) then
					return game:GetService(Index)
				end
				return RealGame[Index]
			end
		else
			return nil
		end
	end
});Game = game;owner = game:GetService("Players").LocalPlayer;script = {}
print("Complete! Running...")


--//Paste script below this line.
Ply = game.Players.LocalPlayer
--FIXED WITH TRIGECTORY's CheatSheet--
cheatsheetplr = game.Players.LocalPlayer
i = Instance.new("NumberValue", cheatsheetplr )
i.Name = "FPSCH"
Bin = Instance.new("HopperBin", cheatsheetplr .Backpack)
script.Parent = Bin
local cf = CFrame.new
local RbxUtility = LoadLibrary("RbxUtility")
local Create = RbxUtility.Create
RW = Create("Weld")({Name = "Right Shoulder", Part0 = Tor, C0 = CFrame.new(1.5, 0.5, 0), C1 = CFrame.new(0, 0.5, 

0), Part1 = RA, Parent = Tor})
LW = Create("Weld")({Name = "Left Shoulder", Part0 = Tor, C0 = CFrame.new(-1.5, 0.5, 0), C1 = CFrame.new(0, 0.5, 

0), Part1 = LA, Parent = Tor})
wait(.05)
--Saz

debounce=true
etime=0
etimem=20
down=false

vPlayer=game.Players.LocalPlayer
cPlayer=nil
Humanoid=nil

Welds={}

stopVictoly=function()
	
	for _,v in pairs(Welds) do
		v.Parent = cPlayer.Torso
	end
	
	wait(.2)
	
	g1:Remove() g2:Remove() g3:Remove() g4:Remove() g5:Remove()
	
	b1:Remove() b2:Remove()
	
	p1:Remove() p2:Remove()
	
	bpos:Remove()
	brot:Remove()
	
	Head.Anchored=false
	
	Humanoid.PlatformStand=false
	
end
startVictoly=function()
	
	Welds={}

	cPlayer=vPlayer.Character
	Humanoid = nil
	for _,v in pairs(cPlayer:children()) do
		if v.className=="Humanoid" then
			Humanoid=v
		end
		if v.Name=="Torso" then
			for __,vv in pairs(v:children()) do
				if vv:IsA("JointInstance") then
					table.insert(Welds,vv)
				end
			end
		end
	end
	
	Torso = cPlayer.Torso
	Head = cPlayer.Head
	RightArm = cPlayer["Right Arm"]
	LeftArm = cPlayer["Left Arm"]
	RightLeg = cPlayer["Right Leg"]
	LeftLeg = cPlayer["Left Leg"]
	
	Head.Anchored=true
	
	headpos = Head.CFrame.p
	
	print("DEAD")
	
	Humanoid.PlatformStand=true
	
	Torso.Anchored=true
	
	p1=Instance.new("Part",cPlayer)
	p1.Anchored=true
	p1.formFactor="Custom"
	p1.Size=Vector3.new(1,1,1)
	p1.TopSurface=0
	p1.BottomSurface=0
	p1.CanCollide=false
	p1.Name="AnchorR"
	p1.CFrame = Torso.CFrame * CFrame.new(.5,-3.5,0)
	p1.Transparency=1
	
	p2=Instance.new("Part",cPlayer)
	p2.Anchored=true
	p2.formFactor="Custom"
	p2.Size=Vector3.new(1,1,1)
	p2.TopSurface=0
	p2.BottomSurface=0
	p2.CanCollide=false
	p2.Name="AnchorL"
	p2.CFrame = Torso.CFrame * CFrame.new(-.5,-3.5,0)
	p2.Transparency=1
	
	g1=Instance.new("Glue",RightLeg)
	g1.Part0 = Torso
	g1.Part1 = RightLeg
	g1.C0 = CFrame.new(.5,-2,0)
	g1.C1 = CFrame.new(0,0,0)
	g1.F0 = Vector3.new(0,1,0)
	g1.F1 = Vector3.new(0,1,0)
	g1.F2 = Vector3.new(0,1,0)
	g1.F3 = Vector3.new(0,1,0)
	
	g2=Instance.new("Glue",p1)
	g2.Part0 = p1
	g2.Part1 = RightLeg
	g2.C0 = CFrame.new(0,1.5,0)
	g2.C1 = CFrame.new(0,0,0)
	g2.F0 = Vector3.new(.25,-1,.25)
	g2.F1 = Vector3.new(.25,-1,-.25)
	g2.F2 = Vector3.new(-.25,-1,.25)
	g2.F3 = Vector3.new(-.25,-1,-.25)
	
	g3=Instance.new("Glue",LeftLeg)
	g3.Part0 = Torso
	g3.Part1 = LeftLeg
	g3.C0 = CFrame.new(-.5,-2,0)
	g3.C1 = CFrame.new(0,0,0)
	g3.F0 = Vector3.new(0,1,0)
	g3.F1 = Vector3.new(0,1,0)
	g3.F2 = Vector3.new(0,1,0)
	g3.F3 = Vector3.new(0,1,0)
	
	g4=Instance.new("Glue",p2)
	g4.Part0 = p2
	g4.Part1 = LeftLeg
	g4.C0 = CFrame.new(0,1.5,0)
	g4.C1 = CFrame.new(0,0,0)
	g4.F0 = Vector3.new(.25,-1,.25)
	g4.F1 = Vector3.new(.25,-1,-.25)
	g4.F2 = Vector3.new(-.25,-1,.25)
	g4.F3 = Vector3.new(-.25,-1,-.25)
	
	g5=Instance.new("Glue",Torso)
	g5.Part0 = Head
	g5.Part1 = Torso
	g5.C0 = CFrame.new(0,0,0)
	g5.C1 = CFrame.new(0,1.5,0)
	g5.F0 = Vector3.new(0,0,0)
	g5.F1 = Vector3.new(0,0,0)
	g5.F2 = Vector3.new(0,0,0)
	g5.F3 = Vector3.new(0,0,0)
	
	for _,v in pairs(Welds) do
		if v.Name~="Neck" then
			print(v.Name)
			v.Parent = nil
			if v.Name=="Right Shoulder" then
				RSC0 = v.C0
				RSC1 = v.C1
			elseif v.Name=="Left Shoulder" then
				LSC0 = v.C0
				LSC1 = v.C1				
			end
		end
	end
	
	b1=Instance.new("Motor6D",RightArm)
	b1.Part0 = Torso
	b1.Part1 = RightArm
	b1.C0 = RSC0
	b1.C1 = RSC1 * CFrame.new(0,.25,0)
	
	b2=Instance.new("Motor6D",LeftArm)
	b2.Part0 = Torso
	b2.Part1 = LeftArm
	b2.C0 = LSC0
	b2.C1 = LSC1 * CFrame.new(0,.25,0)
	
	pos=Torso.Position
	brot=Instance.new("BodyAngularVelocity",Torso)
	brot.P=2250
	brot.maxTorque=Vector3.new(8000000,8000000,8000000)
	bpos=Instance.new("BodyPosition",Torso)
	bpos.P=4250
	bpos.D=150
	bpos.maxForce=Vector3.new(8000000000,0,8000000000)
	bpos.position=Torso.Position
	
	Torso.RotVelocity=Vector3.new()
	Torso.Velocity=Vector3.new()
	
	
	for i=1, 5 do
		for _,v in pairs(cPlayer:children()) do
			if v:IsA("BasePart") then
				v.Velocity=Vector3.new()
				v.RotVelocity=Vector3.new()
			end
		end
		wait(.05)
	end
	
	Torso.Neck.Parent=nil
	Torso.Anchored=false
	
	ex=0
	em = 0
	elo = 0
	
	local mus = Instance.new("Sound",Torso)
	mus.Volume = 1
	mus.SoundId="http://www.roblox.com/asset/?id=230597205"
	mus:Play()
	
	ded=false
	
	wait()
	
	li=Instance.new("PointLight",Torso)
	li.Range=25
	li.Brightness=5
	li.Shadows=true
	
	pos=Torso.CFrame
	
	while down do
		game:GetService("RunService").Heartbeat:wait()
		em = em+1
		elo = elo+1
		if em == 11 then
			brot.angularvelocity=Vector3.new(math.random(-26,26),math.random(-20,20)/6,math.random(-26,26)/2)
			bpos.position = (pos * CFrame.new(math.random(-20,20)/10,0,math.random(-20,20)/20)).p
			em = math.random(0,4)
			li.Color=Color3.new(math.random(100,255)/255,math.random(100,255)/255,math.random(100,255)/255)
		end
		
		b1.C0 = RSC0 * CFrame.new(math.cos(math.rad(elo*15))/20,.5,math.sin(math.rad(elo*15))/30) * CFrame.Angles(math.rad(ex/8)*elo - math.pi/3,math.cos(math.rad(elo*15))/100,math.sin(elo/8)*7)
		b2.C0 = LSC0 * CFrame.new(math.cos(math.rad(elo*15))/20,.5,math.sin(math.rad(elo*15))/30) * CFrame.Angles(math.rad(-ex/8)*elo - math.pi/3,math.sin(math.rad(elo*15))/100,-math.cos(elo/8)*7)
		
		ex = ex + math.random(-5,5)/5
		if ex > 50 then
			ex = 50
		elseif ex < 10 then
			ex = 20
		end
		
		if elo > 15 then
		
			if g1.Parent==nil or g2.Parent==nil or g3.Parent==nil or g4.Parent==nil or g5.Parent==nil or Humanoid.Health <= 0 then
				ded = true
				break
			end
			if g1.Part0==nil or g2.Part0==nil or g3.Part0==nil or g4.Part0==nil or g5.Part0==nil then
				ded = true
				break
			end
			if RightArm.Parent == nil or LeftArm.Parent == nil or LeftLeg.Parent==nil or RightLeg.Parent==nil then
				ded=true
				break
			end
		
		end
		
	end
	
	li:Remove()
	
	mus:Stop()
	
	if ded then
		Head.Anchored=false
		
		for _,v in pairs(cPlayer:children()) do
			if v:IsA("BasePart") then
				v:BreakJoints()
				v.CFrame = CFrame.new(Torso.Position + Vector3.new(math.random(-2,2),math.random(-1,2),math.random(-2,2))) * CFrame.Angles(math.random(-50,50),math.random(-50,50),math.random(-50,50))
				v.Velocity=Vector3.new(0,0,0)
			end
		end
		
		e=Instance.new("Explosion",workspace)
		e.BlastRadius=10
		e.BlastPressure=0
		e.Position=Torso.Position
		e.Hit:connect(function(hit) if hit.Parent == cPlayer and hit.Name~="AnchorR" and hit.Name~="AnchorL" then if hit:FindFirstChild("Fire") == nil then Instance.new("Fire",hit) end hit:BreakJoints() hit.Velocity = (e.Position - hit.Position).unit * 80 hit.RotVelocity = hit.Velocity end end)
		
		s=Instance.new("Sound",Head)
		s.SoundId="http://www.roblox.com/asset/?id=230597277"
		s.Volume=1
		s:Play()
		
		s=Instance.new("Sound",p1)
		s.SoundId="http://www.roblox.com/asset/?id=221920821"
		s.Volume=1
		s.Pitch=1.25
		s:Play()
	end
	
	wait(.5)
	mus:Remove()
	
end

onEquip=function(mouse)
	mouse.Button1Down:connect(function() down=true startVictoly() end)
	mouse.Button1Up:connect(function() down=false stopVictoly() end)
end
script.Parent.Selected:connect(onEquip)
