if game:GetService("RunService"):IsClient() then error("Please run as a server script. Use h/ instead of hl/.") end
print("FE Compatibility: by WaverlyCole & Mokiros")
InternalData = {}
do
	script.Parent = owner.Character
	local Event = Instance.new("RemoteEvent")
	Event.Name = "UserInput"
	local function NewFakeEvent()
		local Fake = {fakeEvent=true,Connect=function(self,Func)self.Function=Func end}Fake.connect = Fake.Connect
		return Fake
	end
	local Mouse = {Target=nil,Hit=CFrame.new(),KeyUp=NewFakeEvent(),KeyDown=NewFakeEvent(),Button1Up=NewFakeEvent(),Button1Down=NewFakeEvent()}
	local UserInputService = {InputBegan=NewFakeEvent(),InputEnded=NewFakeEvent()}
	local ContextActionService = {Actions={},BindAction = function(self,actionName,Func,touch,...)
		self.Actions[actionName] = Func and {Name=actionName,Function=Func,Keys={...}} or nil
	end};ContextActionService.UnBindAction = ContextActionService.BindAction
	local function TriggerEvent(self,Event,...)
		local Trigger = Mouse[Event]
		if Trigger and Trigger.fakeEvent and Trigger.Function then
			Trigger.Function(...)
		end
	end
	Mouse.TrigEvent = TriggerEvent
	UserInputService.TrigEvent = TriggerEvent
	Event.OnServerEvent:Connect(function(FiredBy,Input)
		if FiredBy.Name ~= owner.Name then end
		if Input.MouseEvent then
			Mouse.Target = Input.Target
			Mouse.Hit = Input.Hit
		else
			local Begin = Input.UserInputState == Enum.UserInputState.Begin
			if Input.UserInputType == Enum.UserInputType.MouseButton1 then
				return Mouse:TrigEvent(Begin and "Button1Down" or "Button1Up")
			end
			for _,Action in pairs(ContextActionService.Actions) do
				for _,Key in pairs(Action.Keys) do
					if Key==Input.KeyCode then
						Action.Function(Action.Name,Input.UserInputState,Input)
					end
				end
			end
			Mouse:TrigEvent(Begin and "KeyDown" or "KeyUp",Input.KeyCode.Name:lower())
			UserInputService:TrigEvent(Begin and "InputBegan" or "InputEnded",Input,false)
		end
	end)
	InternalData["Mouse"] = Mouse
	InternalData["ContextActionService"] = ContextActionService
	InternalData["UserInputService"] = UserInputService
	Event.Parent = NLS([[
		local Player = owner
		local Event = script:WaitForChild("UserInput")
		local UserInputService = game:GetService("UserInputService")
		local Mouse = Player:GetMouse()
		local Input = function(Input,gameProcessedEvent)
			if gameProcessedEvent then return end
			Event:FireServer({KeyCode=Input.KeyCode,UserInputType=Input.UserInputType,UserInputState=Input.UserInputState})
		end
		UserInputService.InputBegan:Connect(Input)
		UserInputService.InputEnded:Connect(Input)
		local Hit,Target
		while wait(1/30) do
			if Hit ~= Mouse.Hit or Target ~= Mouse.Target then
				Hit,Target = Mouse.Hit,Mouse.Target
				Event:FireServer({["MouseEvent"]=true,["Target"]=Target,["Hit"]=Hit})
			end
		end
	]],owner.Character)
end
RealGame = game;game = setmetatable({},{
	__index = function (self,Index)
		local Sandbox = function (Thing)
			if Thing:IsA("Player") then
				local RealPlayer = Thing
				return setmetatable({},{
					__index = function (self,Index)
						local Type = type(RealPlayer[Index])
						if Type == "function" then
							if Index:lower() == "getmouse" or Index:lower() == "mouse" then
								return function (self)
									return InternalData["Mouse"]
								end
							end
							return function (self,...)
								return RealPlayer[Index](RealPlayer,...)
							end
						else
							if Index == "PlrObj" then
								return RealPlayer
							end
							return RealPlayer[Index]
						end
					end;
					__tostring = function(self)
						return RealPlayer.Name
					end
				})
			end
		end
		if RealGame[Index] then
			local Type = type(RealGame[Index])
			if Type == "function" then
				if Index:lower() == "getservice" or Index:lower() == "service" then
					return function (self,Service)
						if Service:lower() == "players" then
							return setmetatable({},{
								__index = function (self2,Index2)
									local RealService = RealGame:GetService(Service)
									local Type2 = type(Index2)
									if Type2 == "function" then
										return function (self,...)
											return RealService[Index2](RealService,...)
										end
									else
										if Index2:lower() == "localplayer" then
											return Sandbox(owner)
										end
										return RealService[Index2]
									end
								end;
								__tostring = function(self)
									return RealGame:GetService(Service).Name
								end
							})
						elseif Service:lower() == "contextactionservice" then
							return InternalData["ContextActionService"]
						elseif Service:lower() == "contextactionservice" then
							return InternalData["UserInputService"]
						elseif Service:lower() == "runservice" then
							return setmetatable({},{
								__index = function(self2,Index2)
									local RealService = RealGame:GetService(Service)
									local Type2 = type(Index2)
									if Type2 == "function" then
										return function (self,...)
											return RealService[Index2](RealService,...)
										end
									else
										if Index2:lower() == "bindtorenderstep" then
											return function (self,Name,Priority,Function)
												return RealGame:GetService("RunService").Stepped:Connect(Function)
											end
										end
										if Index2:lower() == "renderstepped" then
											return RealService["Stepped"]
										end
										return RealService[Index2]
									end
								end
							})
						else
							return RealGame:GetService(Service)
						end
					end
				end
				return function (self,...)
					return RealGame[Index](RealGame,...)
				end
			else
				if game:GetService(Index) then
					return game:GetService(Index)
				end
				return RealGame[Index]
			end
		else
			return nil
		end
	end
});Game = game;owner = game:GetService("Players").LocalPlayer;script = {}
print("Complete! Running...")


--//Paste script below this line.

--Script made by Pedrorb03. Enjoy it ;)

--Set Up

game.Players.LocalPlayer.Character.Humanoid.MaxHealth = 1
game.Players.LocalPlayer.Character.Humanoid.Health = 1




for _,anim in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do
	anim:Stop()
end
game.Players.LocalPlayer.Character.Animate:remove()
for _,part in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
	if part.ClassName == "Body Colors" or part.ClassName == "Accessory" or part.ClassName == "Pants" or part.ClassName == "Shirt" or part.ClassName == "Shirt Graphic" then
		part:remove()
	end
end
for _,part in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
	if part:IsA("BasePart") then
		part.BrickColor = BrickColor.new("Pastel brown")
	end
end
shirt = Instance.new("Shirt",game.Players.LocalPlayer.Character) shirt.ShirtTemplate = "http://www.roblox.com/asset/?id=1091821325"
pants = Instance.new("Pants",game.Players.LocalPlayer.Character) pants.PantsTemplate = "http://www.roblox.com/asset/?id=1091821538"
game.Players.LocalPlayer.Character.Head.Mesh.Scale = Vector3.new(0.45,0.45,0.45)
game.Players.LocalPlayer.Character.Head.Mesh.Offset = Vector3.new(0,0.3,-0.1)
game.Players.LocalPlayer.Character.Head.face:remove()
game.Players.LocalPlayer.Character.Head.Mesh.MeshId = "rbxassetid://494265290"
game.Players.LocalPlayer.Character.Head.Mesh.TextureId = "rbxassetid://494265293"

game.Players.LocalPlayer.Character.Head.Jumping.SoundId = "rbxassetid://158309736"
sound = nil

while sound == nil do
	wait()
	sound = Instance.new("Sound")
	if sound ~= nil then
		break
	end
end

levelMusic = sound:Clone()
levelMusic.SoundId = "rbxassetid://232553386"
levelMusic.Looped = true
levelMusic.Parent = game.Players.LocalPlayer.Character
levelMusic.Volume = 0.3
levelMusic:Play()
takeCooldown = false

lifes = 2

lastLife = lifes










game.Players.LocalPlayer.Character.Humanoid.JumpPower = 65
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 25
--Map Set Up
if not game.Workspace:FindFirstChild("Baseplate") then
baseplate = Instance.new("Part") baseplate.Anchored = true baseplate.CFrame = CFrame.new(0,-10,0) baseplate.Name = "Baseplate" baseplate.Locked = true baseplate.Parent = game.Workspace
end
if game.Workspace:FindFirstChild("Baseplate") then
game.Workspace.Baseplate.Size = Vector3.new(2048,20,2048)
GroundTexture = Instance.new("Texture",game.Workspace.Baseplate) GroundTexture.Texture = "rbxassetid://1089643294" GroundTexture.StudsPerTileU = 3 GroundTexture.StudsPerTileV = 3
GroundTexture.Face = "Top"
game.Workspace.Baseplate.CFrame = CFrame.new(0,-9.5,0)
end

sky = Instance.new("Sky",game.Lighting) 
sky.SkyboxBk = "rbxassetid://1089701835"
sky.SkyboxFt = "rbxassetid://1089701835"
sky.SkyboxLf = "rbxassetid://1089701835"
sky.SkyboxRt = "rbxassetid://1089701835"
sky.SkyboxUp = "rbxassetid://1089702222"
sky.SkyboxDn = "rbxassetid://1089702222"

sky.SunTextureId = "rbxassetid://1089711654"
sky.MoonTextureId = "rbxassetid://1089711897"

sky.SunAngularSize = 10
sky.MoonAngularSize = 5

sky.StarCount = 0

color = Instance.new("ColorCorrectionEffect",game.Lighting) color.Saturation = 1 color.Contrast = 1


brick = Instance.new("Part") brick.Anchored = true brick.Size = Vector3.new(3.2,3.2,3.2)
mesh = Instance.new("SpecialMesh",brick) mesh.MeshId = "rbxassetid://1089547491" mesh.TextureId = "rbxassetid://1089552092"
bricks = {}
for _=1,math.random(200,350) do
	local part = brick:Clone()
	part.CFrame = CFrame.new(math.random(-102400,102400)/100,11,math.random(-102400,102400)/100)
	part.Parent = game.Workspace
	table.insert(bricks,part)
end


block = Instance.new("Part") block.Anchored = true block.Size = Vector3.new(3,3,3)
mesh = Instance.new("SpecialMesh",block) mesh.MeshId = "rbxassetid://1089565562" mesh.TextureId = "rbxassetid://1089562101"
blocks = {}
for _=1,math.random(100,150) do
	local part = block:Clone()
	part.CFrame = CFrame.new(math.random(-102400,102400)/100,11,math.random(-102400,102400)/100)
	part.Parent = game.Workspace
	table.insert(blocks,part)
end


coin = Instance.new("Part") coin.Anchored = true coin.Size = Vector3.new(2,2,2) coin.CanCollide = false
mesh = Instance.new("SpecialMesh",coin) mesh.MeshId = "rbxassetid://652133659"  mesh.Scale = Vector3.new(0.005, 0.005, 0.005)
coin.Color = Color3.fromRGB(255,245,0)
coins = {}
for _=1,math.random(300,350) do
	local part = coin:Clone()
	part.CFrame = CFrame.new(math.random(-102400,102400)/100,2,math.random(-102400,102400)/100)
	part.Parent = game.Workspace
	table.insert(coins,part)
end

gui = Instance.new("ScreenGui",game.Players.LocalPlayer.PlayerGui)

coinGui = Instance.new("TextLabel",gui) coinGui.BackgroundTransparency = 1 coinGui.TextScaled = true coinGui.Font = Enum.Font.Arcade coinGui.TextColor3 = Color3.fromRGB(255,255,255)
coinGui.Size = UDim2.new(0.15,0,0.075,0)

mushroom = Instance.new("Part") mushroom.Anchored = false mushroom.Size = Vector3.new(2.5,2.5,2.5)
mesh = Instance.new("SpecialMesh",mushroom) mesh.MeshId = "rbxassetid://843546054" mesh.TextureId = "rbxassetid://843546065" mesh.Scale = Vector3.new(0.05, 0.05, 0.05) 
mushrooms = {}

flower = Instance.new("Part") flower.Anchored = true flower.Size = Vector3.new(2.5,2.5,2.5)
mesh = Instance.new("SpecialMesh",flower) mesh.MeshId = "rbxassetid://1091549739" mesh.TextureId = "rbxassetid://1091549771" mesh.Scale = Vector3.new(0.15, 0.15, 0.15) 
flowers = {}

star = Instance.new("Part") star.Anchored = false star.Size = Vector3.new(2.5,2.5,2.5) star.CanCollide = false
mesh = Instance.new("SpecialMesh",star) mesh.MeshId = "rbxassetid://491129029" mesh.TextureId = "rbxassetid://1092055458" mesh.Scale = Vector3.new(0.075, 0.075, 0.075) 
stars = {}

fire = Instance.new("Part") fire.Anchored = false flower.Size = Vector3.new(1.5,1.5,1.5) fire.Transparency = 1 
meshhh = Instance.new("BillboardGui",fire) meshhh.LightInfluence = 0 meshhh.Size = UDim2.new(1.5,0,1.5,0)
imagee = Instance.new("ImageLabel",meshhh) imagee.BackgroundTransparency = 1 imagee.Size = UDim2.new(1,0,1,0) imagee.Image = "rbxassetid://1091847477"

fires = {}





CoinsVal = 0


--Animation Functions 

walking = false
stopped = true

jumping = false
function walk()
	if lifes > 1 then
	walking = true
		for i=1,1 do
	wait(0.1)
	
	if stopped == false and jumping == false then 
		game.Players.LocalPlayer.Character.Torso.Neck.C0 = CFrame.new(0,1,0)*CFrame.Angles(math.rad(-90),0,math.rad(-180))
	game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = CFrame.new(0,0,0)*CFrame.Angles(math.rad(-90),0,math.rad(-180))
	game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = CFrame.new(1,0.5,0)*CFrame.Angles(0,math.rad(90),math.rad(60))
	game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = CFrame.new(-2,0.5,0)*CFrame.Angles(0,math.rad(90),math.rad(-60))
	
	game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = CFrame.new(1,-1,0)*CFrame.Angles(0,math.rad(90),math.rad(30))
	game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = CFrame.new(0,-1,0)*CFrame.Angles(0,math.rad(90),math.rad(-30))
	else 
		break	
	end

	wait(0.1)
	if stopped == false and jumping == false then 
	game.Players.LocalPlayer.Character.Torso.Neck.C0 = CFrame.new(0,1,0)*CFrame.Angles(math.rad(-90),0,math.rad(-180))
	game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = CFrame.new(0,0,0)*CFrame.Angles(math.rad(-90),0,math.rad(-180))
	
	game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = CFrame.new(-2,0.5,0)*CFrame.Angles(0,math.rad(90),math.rad(60))
	game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = CFrame.new(1,0.5,0)*CFrame.Angles(0,math.rad(90),math.rad(-60))
	
	game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = CFrame.new(1,-1,0)*CFrame.Angles(0,math.rad(90),math.rad(-30))
	game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = CFrame.new(0,-1,0)*CFrame.Angles(0,math.rad(90),math.rad(30))
	else
		 break
	end
	end
walking = false
	else
	walking = true
		for i=1,1 do
	wait(0.1)
	
	if stopped == false and jumping == false then 
		game.Players.LocalPlayer.Character.Torso.Neck.C0 = CFrame.new(0,0.5,0)*CFrame.Angles(math.rad(-90),0,math.rad(-180))
	game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = CFrame.new(0,0,0)*CFrame.Angles(math.rad(-90),0,math.rad(-180))
	game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = CFrame.new(0.15,0.4,0)*CFrame.Angles(0,math.rad(90),math.rad(60))
	game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = CFrame.new(-1.15,0.4,0)*CFrame.Angles(0,math.rad(90),math.rad(-60))
	
	game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = CFrame.new(0.74,-0.1,0.25)*CFrame.Angles(0,math.rad(90),math.rad(30))
	game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = CFrame.new(0.26,-0.1,-0.25)*CFrame.Angles(0,math.rad(90),math.rad(-30))
	else 
		break	
	end

	wait(0.1)
	if stopped == false and jumping == false then 
	game.Players.LocalPlayer.Character.Torso.Neck.C0 = CFrame.new(0,0.5,0)*CFrame.Angles(math.rad(-90),0,math.rad(-180))
	game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = CFrame.new(0,0,0)*CFrame.Angles(math.rad(-90),0,math.rad(-180))
	
	game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = CFrame.new(-1.15,0.4,0)*CFrame.Angles(0,math.rad(90),math.rad(60))
	game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = CFrame.new(0.15,0.4,0)*CFrame.Angles(0,math.rad(90),math.rad(-60))
	
		game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = CFrame.new(0.74,-0.1,-0.25)*CFrame.Angles(0,math.rad(90),math.rad(-30))
	game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = CFrame.new(0.26,-0.1,0.25)*CFrame.Angles(0,math.rad(90),math.rad(30))
	else
		 break
	end
	end
walking = false	
		
		
		
		
		
		
	
	end
	
	
end

function walkStop()
		if lifes > 1 then
	for i=1,1 do
	if jumping == false and stopped == true and walking == false then 
	game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = CFrame.new(-1.5,0.5,0)*CFrame.Angles(0,0,math.rad(-90))
	game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = CFrame.new(1,1,-0.5)*CFrame.Angles(math.rad(90),0,math.rad(-30))
	
	game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = CFrame.new(1,-1,0)*CFrame.Angles(0,math.rad(90),math.rad(0))
	game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = CFrame.new(0,0,-0.5)*CFrame.Angles(0,math.rad(90),math.rad(0))
	
	game.Players.LocalPlayer.Character.Torso.Neck.C0 = CFrame.new(0,1,0)*CFrame.Angles(math.rad(-90),0,math.rad(-250))
	game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = CFrame.new(0,0,0)*CFrame.Angles(math.rad(-90),0,math.rad(-120))
	else
	break
	end
wait(0.25)
if jumping == false and stopped == true and walking == false then 
	
	game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = CFrame.new(-2,0.5,0)*CFrame.Angles(0,math.rad(90),0)
	game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = CFrame.new(1,0.5,0)*CFrame.Angles(0,math.rad(90),0)
	
	game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = CFrame.new(1,-1,0)*CFrame.Angles(0,math.rad(90),math.rad(0))
	game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = CFrame.new(0,-1,0)*CFrame.Angles(0,math.rad(90),math.rad(0))
	
	game.Players.LocalPlayer.Character.Torso.Neck.C0 = CFrame.new(0,1,0)*CFrame.Angles(math.rad(-90),0,math.rad(-180))
	game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = CFrame.new(0,0,0)*CFrame.Angles(math.rad(-90),0,math.rad(-180))
else
	break
end
end
		else

		for i=1,1 do
			
			
	if jumping == false and stopped == true and walking == false then 
		
	game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = CFrame.new(-0.4,0.25,-0.75)*CFrame.Angles(0,0,math.rad(-90))
	game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = CFrame.new(0.5,0.75,-0.1)*CFrame.Angles(math.rad(90),0,math.rad(-30))
	
	game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = CFrame.new(0.74,0,0)*CFrame.Angles(0,math.rad(90),math.rad(0))
	game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = CFrame.new(0.26,0.5,-0.5)*CFrame.Angles(0,math.rad(90),math.rad(0))
	
	game.Players.LocalPlayer.Character.Torso.Neck.C0 = CFrame.new(0,0.5,0)*CFrame.Angles(math.rad(-90),0,math.rad(-250))
	game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = CFrame.new(0,0,0)*CFrame.Angles(math.rad(-90),0,math.rad(-120))
		
		
		
		
		
		
	else
	break
	end
wait(0.25)
if jumping == false and stopped == true and walking == false then 
	
	
	game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = CFrame.new(-1.2,0.5,0)*CFrame.Angles(0,math.rad(90),0)
	game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = CFrame.new(0.2,0.5,0)*CFrame.Angles(0,math.rad(90),0)
	
	game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = CFrame.new(0.74,0,0)*CFrame.Angles(0,math.rad(90),math.rad(0))
	game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = CFrame.new(0.26,0,0)*CFrame.Angles(0,math.rad(90),math.rad(0))
	
	game.Players.LocalPlayer.Character.Torso.Neck.C0 = CFrame.new(0,0.5,0)*CFrame.Angles(math.rad(-90),0,math.rad(-180))
	game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = CFrame.new(0,0,0)*CFrame.Angles(math.rad(-90),0,math.rad(-180))
else
	break
end

end	
	
	
	
	
	
	
	
	
	
	
	
	
	
		end
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
end

function jump()
	if lifes > 1 then
	game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = CFrame.new(-2,0.5,0)*CFrame.Angles(0,math.rad(90),math.rad(-30))
	game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = CFrame.new(1,0.5,0)*CFrame.Angles(0,math.rad(90),math.rad(150))
	
	game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = CFrame.new(1,0,-0.5)*CFrame.Angles(0,math.rad(90),math.rad(0))
	game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = CFrame.new(0,-1,0)*CFrame.Angles(0,math.rad(90),math.rad(0))
	
	game.Players.LocalPlayer.Character.Torso.Neck.C0 = CFrame.new(0,1,0)*CFrame.Angles(math.rad(-90),0,math.rad(-180))
	game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = CFrame.new(0,0,0)*CFrame.Angles(math.rad(-90),0,math.rad(-180))
	else
			game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = CFrame.new(-1.2,0.5,0)*CFrame.Angles(0,math.rad(90),math.rad(-30))
	game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = CFrame.new(0.2,0.5,0)*CFrame.Angles(0,math.rad(90),math.rad(150))
	
	game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = CFrame.new(0.74,0,0)*CFrame.Angles(0,math.rad(90),math.rad(0))
	game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = CFrame.new(0.26,0.5,-0.5)*CFrame.Angles(0,math.rad(90),math.rad(0))
	
	game.Players.LocalPlayer.Character.Torso.Neck.C0 = CFrame.new(0,0.5,0)*CFrame.Angles(math.rad(-90),0,math.rad(-180))
	game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = CFrame.new(0,0,0)*CFrame.Angles(math.rad(-90),0,math.rad(-180))
end
end

function land()
if lifes > 1 then
	game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = CFrame.new(-2,0.5,0)*CFrame.Angles(0,math.rad(90),0)
	game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = CFrame.new(1,0.5,0)*CFrame.Angles(0,math.rad(90),0)
	
	game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = CFrame.new(1,-1,0)*CFrame.Angles(0,math.rad(90),math.rad(0))
	game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = CFrame.new(0,-1,0)*CFrame.Angles(0,math.rad(90),math.rad(0))
	
	game.Players.LocalPlayer.Character.Torso.Neck.C0 = CFrame.new(0,1,0)*CFrame.Angles(math.rad(-90),0,math.rad(-180))
	game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = CFrame.new(0,0,0)*CFrame.Angles(math.rad(-90),0,math.rad(-180))
else
		game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = CFrame.new(-1.2,0.5,0)*CFrame.Angles(0,math.rad(90),0)
	game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = CFrame.new(0.2,0.5,0)*CFrame.Angles(0,math.rad(90),0)
	
	game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = CFrame.new(0.74,0,0)*CFrame.Angles(0,math.rad(90),math.rad(0))
	game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = CFrame.new(0.26,0,0)*CFrame.Angles(0,math.rad(90),math.rad(0))
	
	game.Players.LocalPlayer.Character.Torso.Neck.C0 = CFrame.new(0,0.5,0)*CFrame.Angles(math.rad(-90),0,math.rad(-180))
	game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = CFrame.new(0,0,0)*CFrame.Angles(math.rad(-90),0,math.rad(-180))
	end
end

growing = false


function degrow() 

	for i=1,5 do
local rootJoint = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint:Clone()
local rs = game.Players.LocalPlayer.Character.Torso["Right Shoulder"]:Clone()
local ls = game.Players.LocalPlayer.Character.Torso["Left Shoulder"]:Clone()
local rh = game.Players.LocalPlayer.Character.Torso["Right Hip"]:Clone()
local lh = game.Players.LocalPlayer.Character.Torso["Left Hip"]:Clone()
local n = game.Players.LocalPlayer.Character.Torso["Neck"]:Clone()

game.Players.LocalPlayer.Character.HumanoidRootPart.Size = game.Players.LocalPlayer.Character.HumanoidRootPart.Size/2
game.Players.LocalPlayer.Character.Torso.Size = game.Players.LocalPlayer.Character.Torso.Size/2
game.Players.LocalPlayer.Character["Right Arm"].Size = game.Players.LocalPlayer.Character["Right Arm"].Size/2
game.Players.LocalPlayer.Character["Left Arm"].Size = game.Players.LocalPlayer.Character["Left Arm"].Size/2
game.Players.LocalPlayer.Character["Right Leg"].Size = game.Players.LocalPlayer.Character["Right Leg"].Size/2
game.Players.LocalPlayer.Character["Left Leg"].Size = game.Players.LocalPlayer.Character["Left Leg"].Size/2

rs.Parent = game.Players.LocalPlayer.Character.Torso
ls.Parent = game.Players.LocalPlayer.Character.Torso
rh.Parent = game.Players.LocalPlayer.Character.Torso
lh.Parent = game.Players.LocalPlayer.Character.Torso
n.Parent = game.Players.LocalPlayer.Character.Torso
rootJoint.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
wait(.1)
local rootJoint = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint:Clone()
local rs = game.Players.LocalPlayer.Character.Torso["Right Shoulder"]:Clone()
local ls = game.Players.LocalPlayer.Character.Torso["Left Shoulder"]:Clone()
local rh = game.Players.LocalPlayer.Character.Torso["Right Hip"]:Clone()
local lh = game.Players.LocalPlayer.Character.Torso["Left Hip"]:Clone()
local n = game.Players.LocalPlayer.Character.Torso["Neck"]:Clone()

game.Players.LocalPlayer.Character.HumanoidRootPart.Size = game.Players.LocalPlayer.Character.HumanoidRootPart.Size*2
game.Players.LocalPlayer.Character.Torso.Size = game.Players.LocalPlayer.Character.Torso.Size*2
game.Players.LocalPlayer.Character["Right Arm"].Size = game.Players.LocalPlayer.Character["Right Arm"].Size*2
game.Players.LocalPlayer.Character["Left Arm"].Size = game.Players.LocalPlayer.Character["Left Arm"].Size*2
game.Players.LocalPlayer.Character["Right Leg"].Size = game.Players.LocalPlayer.Character["Right Leg"].Size*2
game.Players.LocalPlayer.Character["Left Leg"].Size = game.Players.LocalPlayer.Character["Left Leg"].Size*2

rs.Parent = game.Players.LocalPlayer.Character.Torso
ls.Parent = game.Players.LocalPlayer.Character.Torso
rh.Parent = game.Players.LocalPlayer.Character.Torso
lh.Parent = game.Players.LocalPlayer.Character.Torso
n.Parent = game.Players.LocalPlayer.Character.Torso
rootJoint.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
wait(.1)
	end
local rootJoint = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint:Clone()
local rs = game.Players.LocalPlayer.Character.Torso["Right Shoulder"]:Clone()
local ls = game.Players.LocalPlayer.Character.Torso["Left Shoulder"]:Clone()
local rh = game.Players.LocalPlayer.Character.Torso["Right Hip"]:Clone()
local lh = game.Players.LocalPlayer.Character.Torso["Left Hip"]:Clone()
local n = game.Players.LocalPlayer.Character.Torso["Neck"]:Clone()

game.Players.LocalPlayer.Character.HumanoidRootPart.Size = game.Players.LocalPlayer.Character.HumanoidRootPart.Size/2
game.Players.LocalPlayer.Character.Torso.Size = game.Players.LocalPlayer.Character.Torso.Size/2
game.Players.LocalPlayer.Character["Right Arm"].Size = game.Players.LocalPlayer.Character["Right Arm"].Size/2
game.Players.LocalPlayer.Character["Left Arm"].Size = game.Players.LocalPlayer.Character["Left Arm"].Size/2
game.Players.LocalPlayer.Character["Right Leg"].Size = game.Players.LocalPlayer.Character["Right Leg"].Size/2
game.Players.LocalPlayer.Character["Left Leg"].Size = game.Players.LocalPlayer.Character["Left Leg"].Size/2

rs.Parent = game.Players.LocalPlayer.Character.Torso
ls.Parent = game.Players.LocalPlayer.Character.Torso
rh.Parent = game.Players.LocalPlayer.Character.Torso
lh.Parent = game.Players.LocalPlayer.Character.Torso
n.Parent = game.Players.LocalPlayer.Character.Torso
rootJoint.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart	

end
function grow() 

	for i=1,5 do

local rootJoint = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint:Clone()
local rs = game.Players.LocalPlayer.Character.Torso["Right Shoulder"]:Clone()
local ls = game.Players.LocalPlayer.Character.Torso["Left Shoulder"]:Clone()
local rh = game.Players.LocalPlayer.Character.Torso["Right Hip"]:Clone()
local lh = game.Players.LocalPlayer.Character.Torso["Left Hip"]:Clone()
local n = game.Players.LocalPlayer.Character.Torso["Neck"]:Clone()

game.Players.LocalPlayer.Character.HumanoidRootPart.Size = game.Players.LocalPlayer.Character.HumanoidRootPart.Size*2
game.Players.LocalPlayer.Character.Torso.Size = game.Players.LocalPlayer.Character.Torso.Size*2
game.Players.LocalPlayer.Character["Right Arm"].Size = game.Players.LocalPlayer.Character["Right Arm"].Size*2
game.Players.LocalPlayer.Character["Left Arm"].Size = game.Players.LocalPlayer.Character["Left Arm"].Size*2
game.Players.LocalPlayer.Character["Right Leg"].Size = game.Players.LocalPlayer.Character["Right Leg"].Size*2
game.Players.LocalPlayer.Character["Left Leg"].Size = game.Players.LocalPlayer.Character["Left Leg"].Size*2

rs.Parent = game.Players.LocalPlayer.Character.Torso
ls.Parent = game.Players.LocalPlayer.Character.Torso
rh.Parent = game.Players.LocalPlayer.Character.Torso
lh.Parent = game.Players.LocalPlayer.Character.Torso
n.Parent = game.Players.LocalPlayer.Character.Torso
rootJoint.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
wait(.1)
local rootJoint = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint:Clone()
local rs = game.Players.LocalPlayer.Character.Torso["Right Shoulder"]:Clone()
local ls = game.Players.LocalPlayer.Character.Torso["Left Shoulder"]:Clone()
local rh = game.Players.LocalPlayer.Character.Torso["Right Hip"]:Clone()
local lh = game.Players.LocalPlayer.Character.Torso["Left Hip"]:Clone()
local n = game.Players.LocalPlayer.Character.Torso["Neck"]:Clone()

game.Players.LocalPlayer.Character.HumanoidRootPart.Size = game.Players.LocalPlayer.Character.HumanoidRootPart.Size/2
game.Players.LocalPlayer.Character.Torso.Size = game.Players.LocalPlayer.Character.Torso.Size/2
game.Players.LocalPlayer.Character["Right Arm"].Size = game.Players.LocalPlayer.Character["Right Arm"].Size/2
game.Players.LocalPlayer.Character["Left Arm"].Size = game.Players.LocalPlayer.Character["Left Arm"].Size/2
game.Players.LocalPlayer.Character["Right Leg"].Size = game.Players.LocalPlayer.Character["Right Leg"].Size/2
game.Players.LocalPlayer.Character["Left Leg"].Size = game.Players.LocalPlayer.Character["Left Leg"].Size/2

rs.Parent = game.Players.LocalPlayer.Character.Torso
ls.Parent = game.Players.LocalPlayer.Character.Torso
rh.Parent = game.Players.LocalPlayer.Character.Torso
lh.Parent = game.Players.LocalPlayer.Character.Torso
n.Parent = game.Players.LocalPlayer.Character.Torso
rootJoint.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
wait(.1)
	end

local rootJoint = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint:Clone()
local rs = game.Players.LocalPlayer.Character.Torso["Right Shoulder"]:Clone()
local ls = game.Players.LocalPlayer.Character.Torso["Left Shoulder"]:Clone()
local rh = game.Players.LocalPlayer.Character.Torso["Right Hip"]:Clone()
local lh = game.Players.LocalPlayer.Character.Torso["Left Hip"]:Clone()
local n = game.Players.LocalPlayer.Character.Torso["Neck"]:Clone()

game.Players.LocalPlayer.Character.HumanoidRootPart.Size = game.Players.LocalPlayer.Character.HumanoidRootPart.Size*2
game.Players.LocalPlayer.Character.Torso.Size = game.Players.LocalPlayer.Character.Torso.Size*2
game.Players.LocalPlayer.Character["Right Arm"].Size = game.Players.LocalPlayer.Character["Right Arm"].Size*2
game.Players.LocalPlayer.Character["Left Arm"].Size = game.Players.LocalPlayer.Character["Left Arm"].Size*2
game.Players.LocalPlayer.Character["Right Leg"].Size = game.Players.LocalPlayer.Character["Right Leg"].Size*2
game.Players.LocalPlayer.Character["Left Leg"].Size = game.Players.LocalPlayer.Character["Left Leg"].Size*2

rs.Parent = game.Players.LocalPlayer.Character.Torso
ls.Parent = game.Players.LocalPlayer.Character.Torso
rh.Parent = game.Players.LocalPlayer.Character.Torso
lh.Parent = game.Players.LocalPlayer.Character.Torso
n.Parent = game.Players.LocalPlayer.Character.Torso

rootJoint.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart

end

function firegrow()


	for i=1,5 do
shirt.ShirtTemplate = "http://www.roblox.com/asset/?id=1091821700"
		pants.PantsTemplate = "http://www.roblox.com/asset/?id=1091821953"
		game.Players.LocalPlayer.Character.Head.Mesh.TextureId = "http://www.roblox.com/asset/?id=1091724768"
		wait(.1)
		shirt.ShirtTemplate = "http://www.roblox.com/asset/?id=1091821325"
        pants.PantsTemplate = "http://www.roblox.com/asset/?id=1091821538"
	game.Players.LocalPlayer.Character.Head.Mesh.TextureId = "rbxassetid://494265293"
		wait(.1)
	end
shirt.ShirtTemplate = "http://www.roblox.com/asset/?id=1091821700"
		pants.PantsTemplate = "http://www.roblox.com/asset/?id=1091821953"
		game.Players.LocalPlayer.Character.Head.Mesh.TextureId = "http://www.roblox.com/asset/?id=1091724768"

end
function defiregrow()
	
	
	for i=1,5 do
			shirt.ShirtTemplate = "http://www.roblox.com/asset/?id=1091821325"
        pants.PantsTemplate = "http://www.roblox.com/asset/?id=1091821538"
	game.Players.LocalPlayer.Character.Head.Mesh.TextureId = "rbxassetid://494265293"
		wait(.1)
	
shirt.ShirtTemplate = "http://www.roblox.com/asset/?id=1091821700"
		pants.PantsTemplate = "http://www.roblox.com/asset/?id=1091821953"
		game.Players.LocalPlayer.Character.Head.Mesh.TextureId = "http://www.roblox.com/asset/?id=1091724768"
		wait(.1)
	end
		shirt.ShirtTemplate = "http://www.roblox.com/asset/?id=1091821325"
        pants.PantsTemplate = "http://www.roblox.com/asset/?id=1091821538"
	game.Players.LocalPlayer.Character.Head.Mesh.TextureId = "rbxassetid://494265293"

end

function fireThrow()


local soundos = sound:Clone()
soundos.SoundId = "rbxassetid://182755400"
soundos.Parent = game.Players.LocalPlayer.Character.Torso
soundos:Play()
game:GetService("Debris"):AddItem(soundos,2)
local fie = fire:Clone()
fie.CanCollide = false
fie.CFrame = CFrame.new(game.Players.LocalPlayer.Character["Right Arm"].Position,game.Players.LocalPlayer.Character["Right Arm"].Position+game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector*3)		
fie.Parent = game.Workspace
table.insert(fires,fie)
fie.Velocity = fie.CFrame.lookVector*30
game:GetService("Debris"):AddItem(fie,3)
game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = CFrame.new(1,0.5,0)*CFrame.Angles(0,math.rad(90),math.rad(90))
wait(.1)
game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = CFrame.new(1,0.5,0)*CFrame.Angles(0,math.rad(90),math.rad(0))

		


end


--Main
game.Players.LocalPlayer.Character["Right Leg"].Touched:connect(function(hit)
		if hit.Parent then
	if hit.Parent ~= game.Players.LocalPlayer.Character then
	
	if hit.Parent:FindFirstChild("Humanoid") then
		if hit.Parent.Humanoid.Health > 0 then
			hit.Parent.Humanoid.Health = 0
			hit.CanCollide = true
			hit.Size = Vector3.new(hit.Size.X,0.05,hit.Size.Z)
			game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
			local sond = sound:Clone()
			sond.SoundId = "rbxassetid://140439666"
			sond.Parent = game.Players.LocalPlayer.Character.Torso
			sond:Play() 
			game:GetService("Debris"):AddItem(sond,2)
			end
	end
	end
	end
end)
game.Players.LocalPlayer.Character.Head.Touched:connect(function(part)
	local did = false
	local num = 0
	for number,part2 in pairs(bricks) do
		if part2 == part then
			did = true
			num = number
		end 
	end
	if did == true then
	
		part:remove()
		
		local coinSound = sound:Clone()
		coinSound.SoundId = "rbxassetid://317619936"
		coinSound.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
		coinSound:Play()
		game:GetService("Debris"):AddItem(coinSound,3)
		table.remove(bricks,num)
		
	end
	
	local did = false
	local num = 0
	for number,part2 in pairs(blocks) do
		if part2 == part then
			did = true
			num = number
		end 
	end
	if did == true then
	
		part.Mesh.MeshId = "rbxassetid://1089569418"
		part.Mesh.TextureId = "rbxassetid://1089568636"
		
		local coinSound = sound:Clone()
		coinSound.SoundId = "rbxassetid://317619936"
		coinSound.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
		coinSound:Play()
		game:GetService("Debris"):AddItem(coinSound,3)
		table.remove(blocks,num)
		local get = math.random(1,2)
		if get == 1 then
			local coinHolo = coin:Clone()
			coinHolo.Parent = part
			coinHolo.CFrame = part.CFrame
			CoinsVal = CoinsVal+10
			local coinSound = sound:Clone()
		coinSound.SoundId = "rbxassetid://138702491"
		coinSound.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
		coinSound:Play()
		game:GetService("Debris"):AddItem(coinSound,3)
		
			for i=1,10 do
				wait()
				coinHolo.CFrame = coinHolo.CFrame+Vector3.new(0,0.25,0)
			end
			wait(1)
			coinHolo:remove()
		end
	if get == 2 then
	local chance = math.random(1,3)
	
	if chance > 1 then
		if lifes > 1 then
		local flow = flower:Clone()
		flow.Parent = game.Workspace
		flow.CFrame = part.CFrame
		table.insert(flowers,flow)
		for i=1,10 do
				wait()
				flow.CFrame = flow.CFrame+Vector3.new(0,0.25,0)
			end
			
		end
		if lifes == 1 then
			local mush = mushroom:Clone()
		mush.CFrame = part.CFrame+Vector3.new(0,2,0)
			mush.Parent = game.Workspace
			
			table.insert(mushrooms,mush)
		end
	end
	if chance == 1 then
			local sta = star:Clone()
		sta.CFrame = part.CFrame+Vector3.new(0,2,0)
		sta.Parent = game.Workspace
			
			table.insert(stars,sta)
	end
	
	
	
	
	
	
	
	end
	end
	
	
end)
starA = false
cooldown = false
colorz = 0
starTimer = 0
game:GetService("UserInputService").InputBegan:connect(function(key)
if key.KeyCode == Enum.KeyCode.C then
if color then
color.Enabled = not color.Enabled
end
end
if key.KeyCode == Enum.KeyCode.Z then
if lifes > 1 then
		local flow = flower:Clone()
		flow.Parent = game.Workspace
		flow.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
		table.insert(flowers,flow)
		
		end
		if lifes == 1 then
			local mush = mushroom:Clone()
		mush.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
			mush.Parent = game.Workspace
			
			table.insert(mushrooms,mush)
		end
end
if key.KeyCode == Enum.KeyCode.X then

	
			local sta = star:Clone()
		sta.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
			sta.Parent = game.Workspace
			
			table.insert(stars,sta)
	
end

	if key.KeyCode == Enum.KeyCode.E then
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 50
		if lifes == 3 then
			if cooldown == false then
cooldown = true
fireThrow()
cooldown = false
	end
		end
		
		
	end
end)
game:GetService("UserInputService").InputEnded:connect(function(key)
	if key.KeyCode == Enum.KeyCode.E then
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 25
	end
end)
game:GetService("RunService").RenderStepped:connect(function()

	starTimer = starTimer+1
	if starTimer > 1 then
		starTimer = 0
			colorz = colorz+1
	if colorz > 5 then
		colorz = 0
	end
	if starA == true then
		for _,part in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
			if part:IsA("BasePart") then
				if part.Name == "HumanoidRootPart" then
			for _,child in pairs(game.Workspace:GetChildren()) do
	if child ~= game.Players.LocalPlayer.Character then
if child:FindFirstChild("Humanoid") then
	for _,parto in pairs(child:GetChildren()) do
		if parto:IsA("BasePart") then
			if (parto.Position-part.Position).magnitude <= 5 then
				parto:remove()
			end
		end
	end
end	
end
end
end
			
			
				local clon = part:Clone()
				for _,child in pairs(clon:GetChildren()) do
					if child.ClassName ~= "SpecialMesh" then
						child:remove()
					else
						child.TextureId = ""
					end
				end
			clon.Anchored = true
			if colorz == 0 then
			clon.Color = Color3.fromRGB(255,0,0)
			end
			if colorz == 1 then
			clon.Color = Color3.fromRGB(255,255,0)
			end
			if colorz == 2 then
			clon.Color = Color3.fromRGB(0,255,0)
			end
			if colorz == 3 then
			clon.Color = Color3.fromRGB(0,255,255)
			end
			if colorz == 4 then
			clon.Color = Color3.fromRGB(0,0,255)
			end
			if colorz == 5 then
			clon.Color = Color3.fromRGB(255,0,255)
			end
			game:GetService("Debris"):AddItem(clon,0.5)
			clon.Transparency = 0
			clon.Anchored = true
			clon.CanCollide = false
			clon.Material = Enum.Material.SmoothPlastic
			clon.BackSurface = Enum.SurfaceType.SmoothNoOutlines
			clon.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
			clon.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
			clon.RightSurface = Enum.SurfaceType.SmoothNoOutlines
			clon.TopSurface = Enum.SurfaceType.SmoothNoOutlines
			clon.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
			
			
			
			
			clon.Parent = game.Workspace
			end
	
	
		end





	end
	end
	
	
	
	
	
	
	
	
coinGui.Text = "Total Score: "..CoinsVal
for number,part in pairs(fires) do
	if part == nil or not part:FindFirstChild("BillboardGui") then
		part:remove()
		table.remove(fires,number)
		break
	end

part.BillboardGui.ImageLabel.Rotation = part.BillboardGui.ImageLabel.Rotation+7.5
part.Touched:connect(function(hit)
	if hit.Parent ~= game.Players.LocalPlayer.Character then
		if hit.Parent:FindFirstChild("Humanoid") then
			hit.Parent.Humanoid.Health = 0
			part:remove()
		end
	end
	part.Velocity = part.CFrame.lookVector*30 +Vector3.new(0,50,0)
end)	

end
for number,part in pairs(stars) do
	if part == nil then
		part:remove()
		table.remove(stars,number)
		break
	end

part.Touched:connect(function(hit)
	part.Velocity = part.CFrame.lookVector*20 +Vector3.new(0,70,0)
end)	

end
for number,part in pairs(coins) do
if takeCooldown == false then
	if (part.Position-game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 3 then
		part:remove()
		takeCooldown = true
		CoinsVal = CoinsVal+10
		local coinSound = sound:Clone()
		coinSound.SoundId = "rbxassetid://138702491"
		coinSound.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
		coinSound:Play()
		game:GetService("Debris"):AddItem(coinSound,3)
		table.remove(coins,number)
		wait()
		takeCooldown = false
		end
	end
end
for number,part in pairs(mushrooms) do
	if takeCooldown == false then
	if (part.Position-game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 3 then
		part:remove()
		takeCooldown = true
		
		local coinSound = sound:Clone()
		coinSound.Volume = 0.07
		coinSound.SoundId = "rbxassetid://162456532"
		coinSound.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
		coinSound:Play()
		game:GetService("Debris"):AddItem(coinSound,3)
		table.remove(mushrooms,number)
		if lifes == 2 and lastLife == 2 then
			CoinsVal = CoinsVal+20
		end
		if lifes == 1 then
		lifes = 2
		end
		if lifes == 2 and lastLife == 1 then
growing = true			
			grow()
		growing = false
			end
	lastLife = lifes
		wait(.1)
	takeCooldown = false
	end
	end
end
for number,part in pairs(stars) do
	if takeCooldown == false then
	if (part.Position-game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 4 then
		part:remove()
		if starA == false then
		takeCooldown = true
		
		local coinSound = sound:Clone()
		
		coinSound.SoundId = "rbxassetid://162456532"
		coinSound.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
		coinSound:Play()
		game:GetService("Debris"):AddItem(coinSound,3)
		levelMusic:Stop()
		wait(0.5)
		local starSound = sound:Clone()
		
		starSound.SoundId = "rbxassetid://1058165596"
		starSound.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
		starSound:Play()
		
	starA = true
	game.Players.LocalPlayer.Character.Humanoid.MaxHealth = math.huge
	game.Players.LocalPlayer.Character.Humanoid.Health = math.huge
	for _,part in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
		if part:IsA("BasePart") then
			part.Transparency = 1
		end
	end
	
		game.Players.LocalPlayer.Character.Parent = game.Workspace.CurrentCamera
		
		
		
		
		table.remove(stars,number)
	
		wait(.1)
	takeCooldown = false
	
	wait(15)
		game.Players.LocalPlayer.Character.Humanoid.MaxHealth = 1
	game.Players.LocalPlayer.Character.Humanoid.Health = 1
	for _,part in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
		if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
			part.Transparency = 0
		end
	end
	levelMusic:Play()
		game.Players.LocalPlayer.Character.Parent = game.Workspace
		
	starA = false
	starSound:remove()
		end
		end
	end
end




for number,part in pairs(flowers) do
	if takeCooldown == false then
	if (part.Position-game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 3 then
		part:remove()
		takeCooldown = true
		
		local coinSound = sound:Clone()
		coinSound.Volume = 0.07
		coinSound.SoundId = "rbxassetid://162456532"
		coinSound.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
		coinSound:Play()
		game:GetService("Debris"):AddItem(coinSound,3)
		table.remove(flowers,number)
		if lifes == 3 and lastLife == 3 then
			CoinsVal = CoinsVal+30
		end
		if lifes == 1 then
growing = true			
			grow()
			growing = false
			lifes = 2
		end
		if lifes == 2 then
growing = true			
			firegrow()
			growing = false
		end
		lifes = 3
		
			wait(.1)
	takeCooldown = false
	
	lastLife = lifes
	
	end
	end
end

	for _,part in pairs(coins) do
		part.CFrame = part.CFrame*CFrame.Angles(0,0.05,0)
	end
	
	for namba,mush in pairs(mushrooms) do
		if mush == nil then
			table.remove(mushrooms,namba)
		end
		mush.CFrame = (CFrame.new(mush.CFrame.p,Vector3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.X,mush.Position.Y,game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Z))-Vector3.new(0,0.1,0))*CFrame.Angles(0,math.rad(180),0) 
	
		mush.Velocity = mush.CFrame.lookVector*5
	end
	for namba,flowo in pairs(flowers) do
		if flowo == nil then
			table.remove(flowers,namba)
		end
		end
	if game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity.Magnitude <= 1 then
		
		if stopped == false and jumping == false  then
			stopped = true
				walking = false
			walkStop()
		end
	end
	if game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity.Magnitude > 1 then
		if walking == false and jumping == false then
			stopped = false
		
			walk()
		end
	end
end)
game.Players.LocalPlayer.Character.Humanoid.StateChanged:connect(function(old,new)
	if new == Enum.HumanoidStateType.Jumping or new == Enum.HumanoidStateType.Freefall then
		jump()
	
		jumping = true
	end
	if new == Enum.HumanoidStateType.Landed then
		land()
wait(.05)
		jumping = false
	end
end)

game.Players.LocalPlayer.Character.Humanoid.HealthChanged:connect(function(newhealth)
	if starA == false then
	if 1 > newhealth then
		if growing == false then

		lifes = lifes-1
		
		if lifes > 0 then
			game.Players.LocalPlayer.Character.Humanoid.Health = 1
		else
	
			for _,child in pairs(game.Workspace:GetChildren()) do
				if child:IsA("BasePart") then
					if child.Name ~= "Baseplate" and child.Name ~= "Terrain" then
						child:remove()
					end
				end
			end
	if game.Workspace:FindFirstChild("Baseplate") then
		game.Workspace.Baseplate.Transparency = 1
GroundTexture:remove()
	end
	levelMusic:remove()
local gameover =sound:Clone()
	gameover.SoundId = "rbxassetid://187102994"
	gameover.Parent = game.Players.LocalPlayer.Character
	gameover:Play()
	color.Saturation = -1
	color.Contrast = 5
	
	sky.SkyboxBk = "http://www.roblox.com/asset/?id=1091341380"
sky.SkyboxFt = "http://www.roblox.com/asset/?id=1091341380"
sky.SkyboxLf = "http://www.roblox.com/asset/?id=1091341380"
sky.SkyboxRt = "http://www.roblox.com/asset/?id=1091341380"
sky.SkyboxUp = "http://www.roblox.com/asset/?id=1091341494"
sky.SkyboxDn = "http://www.roblox.com/asset/?id=1091341494"


sky.SunAngularSize = 0
sky.MoonAngularSize = 0


wait(4)	
if game.Workspace:FindFirstChild("Baseplate") then
		game.Workspace.Baseplate.Transparency = 0
		end
gameover:remove()
			color:remove()
			sky:remove()

		end


		if lifes == 1 then
growing = true			
			degrow()
		growing = false
			end
			if lifes == 2 then
				growing = true			
			defiregrow()
		growing = false
			end

		
		else
				game.Players.LocalPlayer.Character.Humanoid.Health = 1
		end
	end
	end
	if starA == true then
		game.Players.LocalPlayer.Character.Humanoid.Health = math.huge
	end
	lastLife = lifes
end)