
if game:GetService("RunService"):IsClient() then error("Please run as a server script. Use h/ instead of hl/.") end
print("FE Compatibility: by WaverlyCole & Mokiros")
InternalData = {}
do
	script.Parent = owner.Character
	local Event = Instance.new("RemoteEvent")
	Event.Name = "UserInput"
	local function NewFakeEvent()
		local Fake = {fakeEvent=true,Connect=function(self,Func)self.Function=Func end}Fake.connect = Fake.Connect
		return Fake
	end
	local Mouse = {Target=nil,Hit=CFrame.new(),KeyUp=NewFakeEvent(),KeyDown=NewFakeEvent(),Button1Up=NewFakeEvent(),Button1Down=NewFakeEvent()}
	local UserInputService = {InputBegan=NewFakeEvent(),InputEnded=NewFakeEvent()}
	local ContextActionService = {Actions={},BindAction = function(self,actionName,Func,touch,...)
		self.Actions[actionName] = Func and {Name=actionName,Function=Func,Keys={...}} or nil
	end};ContextActionService.UnBindAction = ContextActionService.BindAction
	local function TriggerEvent(self,Event,...)
		local Trigger = Mouse[Event]
		if Trigger and Trigger.fakeEvent and Trigger.Function then
			Trigger.Function(...)
		end
	end
	Mouse.TrigEvent = TriggerEvent
	UserInputService.TrigEvent = TriggerEvent
	Event.OnServerEvent:Connect(function(FiredBy,Input)
		if FiredBy.Name ~= owner.Name then end
		if Input.MouseEvent then
			Mouse.Target = Input.Target
			Mouse.Hit = Input.Hit
		else
			local Begin = Input.UserInputState == Enum.UserInputState.Begin
			if Input.UserInputType == Enum.UserInputType.MouseButton1 then
				return Mouse:TrigEvent(Begin and "Button1Down" or "Button1Up")
			end
			for _,Action in pairs(ContextActionService.Actions) do
				for _,Key in pairs(Action.Keys) do
					if Key==Input.KeyCode then
						Action.Function(Action.Name,Input.UserInputState,Input)
					end
				end
			end
			Mouse:TrigEvent(Begin and "KeyDown" or "KeyUp",Input.KeyCode.Name:lower())
			UserInputService:TrigEvent(Begin and "InputBegan" or "InputEnded",Input,false)
		end
	end)
	InternalData["Mouse"] = Mouse
	InternalData["ContextActionService"] = ContextActionService
	InternalData["UserInputService"] = UserInputService
	Event.Parent = NLS([[
		local Player = owner
		local Event = script:WaitForChild("UserInput")
		local UserInputService = game:GetService("UserInputService")
		local Mouse = Player:GetMouse()
		local Input = function(Input,gameProcessedEvent)
			if gameProcessedEvent then return end
			Event:FireServer({KeyCode=Input.KeyCode,UserInputType=Input.UserInputType,UserInputState=Input.UserInputState})
		end
		UserInputService.InputBegan:Connect(Input)
		UserInputService.InputEnded:Connect(Input)
		local Hit,Target
		while wait(1/30) do
			if Hit ~= Mouse.Hit or Target ~= Mouse.Target then
				Hit,Target = Mouse.Hit,Mouse.Target
				Event:FireServer({["MouseEvent"]=true,["Target"]=Target,["Hit"]=Hit})
			end
		end
	]],owner.Character)
end
RealGame = game;game = setmetatable({},{
	__index = function (self,Index)
		local Sandbox = function (Thing)
			if Thing:IsA("Player") then
				local RealPlayer = Thing
				return setmetatable({},{
					__index = function (self,Index)
						local Type = type(RealPlayer[Index])
						if Type == "function" then
							if Index:lower() == "getmouse" or Index:lower() == "mouse" then
								return function (self)
									return InternalData["Mouse"]
								end
							end
							return function (self,...)
								return RealPlayer[Index](RealPlayer,...)
							end
						else
							if Index == "PlrObj" then
								return RealPlayer
							end
							return RealPlayer[Index]
						end
					end;
					__tostring = function(self)
						return RealPlayer.Name
					end
				})
			end
		end
		if RealGame[Index] then
			local Type = type(RealGame[Index])
			if Type == "function" then
				if Index:lower() == "getservice" or Index:lower() == "service" then
					return function (self,Service)
						if Service:lower() == "players" then
							return setmetatable({},{
								__index = function (self2,Index2)
									local RealService = RealGame:GetService(Service)
									local Type2 = type(Index2)
									if Type2 == "function" then
										return function (self,...)
											return RealService[Index2](RealService,...)
										end
									else
										if Index2:lower() == "localplayer" then
											return Sandbox(owner)
										end
										return RealService[Index2]
									end
								end;
								__tostring = function(self)
									return RealGame:GetService(Service).Name
								end
							})
						elseif Service:lower() == "contextactionservice" then
							return InternalData["ContextActionService"]
						elseif Service:lower() == "contextactionservice" then
							return InternalData["UserInputService"]
						elseif Service:lower() == "runservice" then
							return setmetatable({},{
								__index = function(self2,Index2)
									local RealService = RealGame:GetService(Service)
									local Type2 = type(Index2)
									if Type2 == "function" then
										return function (self,...)
											return RealService[Index2](RealService,...)
										end
									else
										if Index2:lower() == "bindtorenderstep" then
											return function (self,Name,Priority,Function)
												return RealGame:GetService("RunService").Stepped:Connect(Function)
											end
										end
										if Index2:lower() == "renderstepped" then
											return RealService["Stepped"]
										end
										return RealService[Index2]
									end
								end
							})
						else
							return RealGame:GetService(Service)
						end
					end
				end
				return function (self,...)
					return RealGame[Index](RealGame,...)
				end
			else
				if game:GetService(Index) then
					return game:GetService(Index)
				end
				return RealGame[Index]
			end
		else
			return nil
		end
	end
});Game = game;owner = game:GetService("Players").LocalPlayer;script = {}
print("Complete! Running...")


--//Paste script below this line.

--Converted with ttyyuu12345's model to script plugin v4
function sandbox(var,func)
	local env = getfenv(func)
	local newenv = setmetatable({},{
		__index = function(self,k)
			if k=="script" then
				return var
			else
				return env[k]
			end
		end,
	})
	setfenv(func,newenv)
	return func
end
cors = {}
mas = Instance.new("Model",game:GetService("Lighting"))
Script0 = Instance.new("Script")
StringValue1 = Instance.new("StringValue")
LocalScript2 = Instance.new("LocalScript")
StringValue3 = Instance.new("StringValue")
Script0.Name = "VisScript"
Script0.Parent = mas
table.insert(cors,sandbox(Script0,function()
--[[ Player Check ]]--

repeat wait() until game.Players:FindFirstChild(script.Player.Value) ~= nil

--[[ Player Functions ]]--

local plr = game.Players:FindFirstChild(script.Player.Value)
local char = plr.Character or plr.CharacterAdded:Wait()

--[[ Script Check ]]--

if script.Parent ~= char then
	script.Parent = char
end

--[[ Settings ]]--

local Settings = {
    Prefix = ">"
}

--[[ sound ]]--

local sound = Instance.new("Sound")
sound.Parent = char["HumanoidRootPart"]
sound.SoundId = "rbxassetid://3587198289"
sound.Volume = 5
sound.Looped = true
sound.TimePosition = _G.TimePos or 0
sound:Play()

--[[ Player Chat ]]--

plr.Chatted:connect(function(msg)

      if msg:sub(1, 6):lower():match(Settings.Prefix..'play ') then
                local val = Instance.new("NumberValue", char)
                val.Value = tonumber(msg:sub(7))
                local id = val.Value
                sound:Stop()
                sound.SoundId = 'rbxassetid://'..id
                sound:Play()
                sound.Looped = true

      elseif msg:sub(1, 7):lower():match(Settings.Prefix..'pitch ') then
                local val2 = Instance.new("NumberValue", char)
                val2.Value = tonumber(msg:sub(8))
                local Pitch = val2.Value
                sound.Pitch = Pitch
                
      elseif msg:sub(1, 5):lower():match(Settings.Prefix..'vol ') then
                local val3 = Instance.new("NumberValue", char)
                val3.Value = tonumber(msg:sub(6))
                local Volume = val3.Value
                sound.Volume = Volume

      elseif msg:sub(1, 6):lower():match(Settings.Prefix..'tpos ') then
                local val4 = Instance.new("NumberValue", char)
                val4.Value = tonumber(msg:sub(7))
                local Tpos = val4.Value
                sound.TimePosition = Tpos

end

end)

--[[ Nosound Proof ]]--

game:GetService("RunService").Stepped:Connect(function()
	if char.HumanoidRootPart:FindFirstChild("Sound") ~= nil then
		_G.id = sound.SoundId
		_G.TimePos = sound.TimePosition
	elseif char.HumanoidRootPart:FindFirstChild("Sound") == nil then
		sound = Instance.new("Sound",char.HumanoidRootPart)
		sound.SoundId = _G.id
		sound.Volume = 3
		sound.Looped = true
		sound.TimePosition = _G.TimePos
		sound:Play()
	end
end)

--[[ Clone Local Data ]]--

game.Players.PlayerAdded:Connect(function(pl)
	pl.CharacterAdded:Connect(function(ch)
		local sc = script.LocalData:Clone()
		sc.Parent = ch
		sc.Player.Value = plr.Name
		sc.Disabled = false
	end)
end)

--[[ Clone Script ]]--

for i, pl in pairs(game.Players:GetPlayers()) do
	local ch = pl.Character or pl.CharacterAdded:Wait()
	local sc = script.LocalData:Clone()
	sc.Player.Value = plr.Name
	sc.Parent = ch
	sc.Disabled = false

	pl.CharacterAdded:Connect(function(ch)
		local sc = script.LocalData:Clone()
		sc.Parent = ch
		sc.Player.Value = plr.Name
		sc.Disabled = false
	end)
end



end))
StringValue1.Name = "Player"
StringValue1.Parent = Script0
StringValue1.Value = "Player1"
LocalScript2.Name = "LocalData"
LocalScript2.Parent = Script0
table.insert(cors,sandbox(LocalScript2,function()
--[[ Player Check ]]--

repeat wait() until game.Players:FindFirstChild(script.Player.Value) ~= nil

--[[ Player Functions ]]--

local plr = game.Players:FindFirstChild(script.Player.Value)
local char = plr.Character

--[[ Destroy Parts ]]--

pcall(function()
	for i,v in pairs(char:GetChildren()) do
		if v:IsA("Folder") then
	          if v.Name == "Parts" then
        	    v:Destroy()
	          end
		end
	end
end)

--[[ Variables ]]--

local speed = 3
local num = 0
local change = 2 / speed

local Tick = tick()

local LastLoudness = 0
local Debounce = true

--[[ Instance Function ]]--

local CreateInstance = function(Object, ...)
local Obj = Instance.new(Object)
for i,v in next,(...) do
Obj[i] = v
end
return Obj
end

--[[ Folder ]]--

local Parts = CreateInstance("Folder",{
    Name = "Parts",
    Parent = char
})

--[[ Orb ]]--

local Orb = CreateInstance("Part",{
    Anchored = false,
    CanCollide = false,
    Locked = true,
    Massless = true,
    Size = Vector3.new(5, 5, 5),
    Material = Enum.Material.Neon,
    Shape = Enum.PartType.Ball,
    Color = Color3.fromRGB(0, 0, 0),
    Parent = Parts
})

--[[ BodyPosition And BodyGyro ]]--

local BodyGyro = CreateInstance("BodyGyro",{
    MaxTorque = Vector3.new(math.huge, math.huge, math.huge),
    Parent = Orb
})

local BodyPosition = CreateInstance("BodyPosition",{
    MaxForce = Vector3.new(math.huge, math.huge, math.huge),
    Parent = Orb
})

--[[ Shield ]]--

local Shield = CreateInstance("Part",{
    Anchored = false,
    CanCollide = false,
    Locked = true,
    Massless = true,
    Size = Vector3.new(5.15, 5.15, 5.15),
    Material = Enum.Material.ForceField,
    Shape = Enum.PartType.Ball,
    Color = Color3.fromRGB(0, 0, 0),
    Parent = Parts
})

--[[ Weld ]]--

local ShieldW = CreateInstance("Weld",{
    Part0 = Orb,
    Part1 = Shield,
    Parent = Parts
})

--[[ TweenService ]]--

local TweenService = game:GetService("TweenService")

OrbGoal = {}

ShieldGoal = {}

CubeGoal = {}

--[[ Tween ]]--

function Tween(P, I, G)
local Tween = TweenService:Create(P, I, G)
Tween:Play()
end

--[ Visualizing ]]--

game:GetService("RunService").RenderStepped:Connect(function()

local Sound = char["HumanoidRootPart"]:FindFirstChild("Sound")

if char ~= nil then

Playback = Sound.PlaybackLoudness
Playback = math.floor(Playback)

num = num + change
Tick = Tick + 0.5

local Position = char["HumanoidRootPart"].CFrame * CFrame.new(0, 8 + math.sin(Tick / 100), 0)
BodyPosition.Position = Position.p
BodyGyro.CFrame = Position

OrbGoal.Size = Vector3.new(2 + Playback / 250, 2 + Playback / 250, 2 + Playback / 250)
OrbGoal.Color = Color3.fromRGB(100, 50, 255):lerp(Color3.fromRGB(Playback / 4, Playback / 4, Playback / 3), 1 / speed)
Tween(Orb, TweenInfo.new(0.25, Enum.EasingStyle.Circular), OrbGoal)

ShieldGoal.Size = Vector3.new(2.15 + Playback / 250, 2.15 + Playback / 250, 2.15 + Playback / 250)
ShieldGoal.Color = Color3.fromRGB(255, 255, 255):lerp(Color3.fromRGB(Playback / 3, Playback / 3, Playback / 3), 1 / speed)
Tween(Shield, TweenInfo.new(0.25, Enum.EasingStyle.Circular), ShieldGoal)

coroutine.resume(coroutine.create(function()

local PBS = Playback * Playback
if LastLoudness ~= 0 then

local Formula = math.abs((LastLoudness * (PBS / 425)))
if (math.abs(PBS) > Formula) == false and Debounce then
	
for i = 1, 5 do

local Cube = CreateInstance("Part",{
    Anchored = true,
    CanCollide = false,
    Locked = true,
    Massless = true,
    Size = Vector3.new(0.25, 0.25, 0.25),
    Material = Enum.Material.Neon,
    Color = Color3.fromRGB(0, 0, 0),
    Parent = Parts,
	CFrame = Orb.CFrame
})

CubeGoal.CFrame = Orb.CFrame * CFrame.new(Random.new():NextNumber(-Playback / 50, Playback / 50), Random.new():NextNumber(-Playback / 50, Playback / 50), Random.new():NextNumber(-Playback / 50, Playback / 50)) * CFrame.Angles(math.rad(Random.new():NextNumber(-Playback / 50, Playback / 50)), math.rad(Random.new():NextNumber(-Playback / 50, Playback / 50)), math.rad(Random.new():NextNumber(-Playback / 50, Playback / 50)))
CubeGoal.Color = Color3.fromRGB(100, 50, 255):lerp(Color3.fromRGB(Playback / 4, Playback / 4, Playback / 3), 1 / speed)
CubeGoal.Size = Vector3.new(0.25 + Playback / 500, 0.25 + Playback / 500, 0.25 + Playback / 500)
CubeGoal.Transparency = 1
Tween(Cube, TweenInfo.new(2, Enum.EasingStyle.Circular), CubeGoal)
game:GetService("Debris"):AddItem(Cube, 2)

end

Debounce = false

spawn(function()
wait(0.1)
Debounce = true
end)
end
end

LastLoudness = Playback

end))

end

end)
end))
StringValue3.Name = "Player"
StringValue3.Parent = LocalScript2
StringValue3.Value = "Player1"
for i,v in pairs(mas:GetChildren()) do
	v.Parent = workspace
	pcall(function() v:MakeJoints() end)
end
mas:Destroy()
for i,v in pairs(cors) do
	spawn(function()
		pcall(v)
	end)
end
